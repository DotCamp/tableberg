{"version":3,"file":"image/index.js","mappings":"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wC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://tableberg/./node_modules/.pnpm/@wordpress+icons@9.28.0/node_modules/@wordpress/icons/build-module/library/caption.js","webpack://tableberg/./node_modules/.pnpm/@wordpress+icons@9.28.0/node_modules/@wordpress/icons/build-module/library/crop.js","webpack://tableberg/./node_modules/.pnpm/@wordpress+icons@9.28.0/node_modules/@wordpress/icons/build-module/library/image.js","webpack://tableberg/./src/components/border-control/index.tsx","webpack://tableberg/./src/components/color-settings/color-settings-with-gradient.tsx","webpack://tableberg/./src/components/color-settings/color-settings.tsx","webpack://tableberg/./src/components/index.tsx","webpack://tableberg/./src/components/spacing-control/index.tsx","webpack://tableberg/./src/components/toggle-group-control/index.tsx","webpack://tableberg/./src/image/block-controls.tsx","webpack://tableberg/./src/image/constants.tsx","webpack://tableberg/./src/image/edit.tsx","webpack://tableberg/./src/image/image.tsx","webpack://tableberg/./src/image/index.tsx","webpack://tableberg/./src/image/inspector.tsx","webpack://tableberg/./src/image/media-placeholder.tsx","webpack://tableberg/./src/utils/styling-helpers.ts","webpack://tableberg/./src/image/style.scss?92a6","webpack://tableberg/external window \"lodash\"","webpack://tableberg/external window [\"wp\",\"blockEditor\"]","webpack://tableberg/external window [\"wp\",\"blocks\"]","webpack://tableberg/external window [\"wp\",\"components\"]","webpack://tableberg/external window [\"wp\",\"compose\"]","webpack://tableberg/external window [\"wp\",\"data\"]","webpack://tableberg/external window [\"wp\",\"element\"]","webpack://tableberg/external window [\"wp\",\"i18n\"]","webpack://tableberg/external window [\"wp\",\"primitives\"]","webpack://tableberg/webpack/bootstrap","webpack://tableberg/webpack/runtime/chunk loaded","webpack://tableberg/webpack/runtime/compat get default export","webpack://tableberg/webpack/runtime/define property getters","webpack://tableberg/webpack/runtime/hasOwnProperty shorthand","webpack://tableberg/webpack/runtime/make namespace object","webpack://tableberg/webpack/runtime/jsonp chunk loading","webpack://tableberg/webpack/before-startup","webpack://tableberg/webpack/startup","webpack://tableberg/webpack/after-startup"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nconst caption = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M6 5.5h12a.5.5 0 0 1 .5.5v12a.5.5 0 0 1-.5.5H6a.5.5 0 0 1-.5-.5V6a.5.5 0 0 1 .5-.5ZM4 6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6Zm4 10h2v-1.5H8V16Zm5 0h-2v-1.5h2V16Zm1 0h2v-1.5h-2V16Z\"\n}));\nexport default caption;\n//# sourceMappingURL=caption.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst crop = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M16.5 7.8v7H18v-7c0-1-.8-1.8-1.8-1.8h-7v1.5h7c.2 0 .3.1.3.3zm-8.7 8.7c-.1 0-.2-.1-.2-.2V2H6v4H2v1.5h4v8.8c0 1 .8 1.8 1.8 1.8h8.8v4H18v-4h4v-1.5H7.8z\"\n}));\nexport default crop;\n//# sourceMappingURL=crop.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nconst image = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5 4.5h14c.3 0 .5.2.5.5v8.4l-3-2.9c-.3-.3-.8-.3-1 0L11.9 14 9 12c-.3-.2-.6-.2-.8 0l-3.6 2.6V5c-.1-.3.1-.5.4-.5zm14 15H5c-.3 0-.5-.2-.5-.5v-2.4l4.1-3 3 1.9c.3.2.7.2.9-.1L16 12l3.5 3.4V19c0 .3-.2.5-.5.5z\"\n}));\nexport default image;\n//# sourceMappingURL=image.js.map","/**\r\n * WordPress Dependencies\r\n */\r\n//@ts-ignore\r\nimport { isEmpty } from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport {\r\n    // @ts-ignore\r\n    useBlockEditContext,\r\n    // @ts-ignore\r\n    __experimentalBorderRadiusControl as BorderRadiusControl,\r\n} from \"@wordpress/block-editor\";\r\nimport { useSelect, useDispatch } from \"@wordpress/data\";\r\nimport {\r\n    BaseControl,\r\n    __experimentalToolsPanelItem as ToolsPanelItem,\r\n    __experimentalBorderBoxControl as BorderBoxControl,\r\n} from \"@wordpress/components\";\r\n\r\nimport type { BorderControlPropTypes } from \"../types\";\r\n\r\nexport function splitBorderRadius(value: string | object) {\r\n    const isValueMixed = typeof value === \"string\";\r\n    const splittedBorderRadius = {\r\n        topLeft: value,\r\n        topRight: value,\r\n        bottomLeft: value,\r\n        bottomRight: value,\r\n    };\r\n    return isValueMixed ? splittedBorderRadius : value;\r\n}\r\n\r\nfunction BorderControl({\r\n    borderLabel,\r\n    attrBorderKey,\r\n    borderRadiusLabel,\r\n    attrBorderRadiusKey,\r\n    showBorder = true,\r\n    showBorderRadius = true,\r\n    showDefaultBorder = false,\r\n    showDefaultBorderRadius = false,\r\n}: BorderControlPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n    // @ts-ignore\r\n    const attributes = useSelect(\r\n        // @ts-ignore\r\n        (select) => select(\"core/block-editor\").getSelectedBlock().attributes\r\n    );\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n    const setAttributes = (newAttributes: object) => {\r\n        updateBlockAttributes(clientId, newAttributes);\r\n    };\r\n    // @ts-ignore\r\n    const { defaultColors } = useSelect((select) => {\r\n        return {\r\n            defaultColors:\r\n                // @ts-ignore\r\n                select(\"core/block-editor\")?.getSettings()\r\n                    ?.__experimentalFeatures?.color?.palette?.default,\r\n        };\r\n    });\r\n    return (\r\n        <>\r\n            {showBorder && (\r\n                <ToolsPanelItem\r\n                    panelId={clientId}\r\n                    isShownByDefault={showDefaultBorder}\r\n                    resetAllFilter={() =>\r\n                        setAttributes({\r\n                            [attrBorderKey]: {},\r\n                        })\r\n                    }\r\n                    hasValue={() => !isEmpty(attributes[attrBorderKey])}\r\n                    label={borderLabel}\r\n                    onDeselect={() => {\r\n                        setAttributes({ [attrBorderKey]: {} });\r\n                    }}\r\n                >\r\n                    <BorderBoxControl\r\n                        enableAlpha\r\n                        size={\"__unstable-large\"}\r\n                        colors={defaultColors}\r\n                        label={borderLabel}\r\n                        onChange={(newBorder) => {\r\n                            setAttributes({ [attrBorderKey]: newBorder });\r\n                        }}\r\n                        value={attributes[attrBorderKey]}\r\n                    />\r\n                </ToolsPanelItem>\r\n            )}\r\n\r\n            {showBorderRadius && (\r\n                <ToolsPanelItem\r\n                    panelId={clientId}\r\n                    isShownByDefault={showDefaultBorderRadius}\r\n                    resetAllFilter={() =>\r\n                        setAttributes({\r\n                            [attrBorderRadiusKey]: {},\r\n                        })\r\n                    }\r\n                    label={borderRadiusLabel}\r\n                    hasValue={() => !isEmpty(attributes[attrBorderRadiusKey])}\r\n                    onDeselect={() => {\r\n                        setAttributes({ [attrBorderRadiusKey]: {} });\r\n                    }}\r\n                >\r\n                    <BaseControl.VisualLabel as=\"legend\">\r\n                        {borderRadiusLabel}\r\n                    </BaseControl.VisualLabel>\r\n                    <div className=\"tableberg-custom-border-radius-control\">\r\n                        <BorderRadiusControl\r\n                            values={attributes[attrBorderRadiusKey]}\r\n                            onChange={(newBorderRadius: any) => {\r\n                                const splitted =\r\n                                    splitBorderRadius(newBorderRadius);\r\n\r\n                                setAttributes({\r\n                                    [attrBorderRadiusKey]: splitted,\r\n                                });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </ToolsPanelItem>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BorderControl;\r\n","/**\r\n * WordPress Dependencies\r\n */\r\n\r\nimport { useDispatch, useSelect } from \"@wordpress/data\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport {\r\n    // @ts-ignore\r\n    useBlockEditContext,\r\n    // @ts-ignore\r\n    __experimentalColorGradientSettingsDropdown as ColorGradientSettingsDropdown,\r\n    // @ts-ignore\r\n    __experimentalUseMultipleOriginColorsAndGradients as useMultipleOriginColorsAndGradients,\r\n} from \"@wordpress/block-editor\";\r\nimport { ColorSettingsWithGradientPropTypes } from \"../types\";\r\n\r\n/**\r\n *\r\n * @param {object} props - Color settings with gradients props\r\n * @param {string} props.label - Component Label\r\n * @param {string} props.attrBackgroundKey - Attribute key for background color\r\n * @param {string} props.attrGradientKey - Attribute key for gradient background color\r\n *\r\n */\r\nfunction ColorSettingWithGradient({\r\n    attrBackgroundKey,\r\n    attrGradientKey,\r\n    label,\r\n}: ColorSettingsWithGradientPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n\r\n    // @ts-ignore\r\n    const attributes = useSelect((select) => {\r\n        // @ts-ignore\r\n        return select(\"core/block-editor\").getBlockAttributes(clientId);\r\n    });\r\n    // @ts-ignore\r\n    const setAttributes = (newAttributes) =>\r\n        updateBlockAttributes(clientId, newAttributes);\r\n    const colorGradientSettings = useMultipleOriginColorsAndGradients();\r\n    // @ts-ignore\r\n    const { defaultColors, defaultGradients } = useSelect((select) => {\r\n        return {\r\n            defaultColors:\r\n                // @ts-ignore\r\n                select(\"core/block-editor\")?.getSettings()\r\n                    ?.__experimentalFeatures?.color?.palette?.default,\r\n\r\n            defaultGradients:\r\n                // @ts-ignore\r\n                select(\"core/block-editor\")?.getSettings()\r\n                    ?.__experimentalFeatures?.color?.gradients?.default,\r\n        };\r\n    });\r\n\r\n    return (\r\n        <ColorGradientSettingsDropdown\r\n            {...colorGradientSettings}\r\n            enableAlpha\r\n            panelId={clientId}\r\n            title={__(\"Color Settings\", \"gutenberghub-tabs\")}\r\n            popoverProps={{\r\n                placement: \"left start\",\r\n            }}\r\n            settings={[\r\n                {\r\n                    clearable: true,\r\n                    resetAllFilter: () =>\r\n                        setAttributes({\r\n                            [attrBackgroundKey]: null,\r\n                            [attrGradientKey]: null,\r\n                        }),\r\n                    colorValue: attributes[attrBackgroundKey],\r\n                    gradientValue: attributes[attrGradientKey],\r\n                    colors: defaultColors,\r\n                    gradients: defaultGradients,\r\n                    label: label,\r\n                    onColorChange: (newValue: string | null) =>\r\n                        setAttributes({\r\n                            [attrBackgroundKey]: newValue,\r\n                        }),\r\n                    onGradientChange: (newValue: string | null) =>\r\n                        setAttributes({\r\n                            [attrGradientKey]: newValue,\r\n                        }),\r\n                },\r\n            ]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ColorSettingWithGradient;\r\n","/**\r\n * WordPress Dependencies\r\n */\r\n\r\nimport { useDispatch, useSelect } from \"@wordpress/data\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport {\r\n    // @ts-ignore\r\n    useBlockEditContext,\r\n    // @ts-ignore\r\n    __experimentalColorGradientSettingsDropdown as ColorGradientSettingsDropdown,\r\n    // @ts-ignore\r\n    __experimentalUseMultipleOriginColorsAndGradients as useMultipleOriginColorsAndGradients,\r\n} from \"@wordpress/block-editor\";\r\nimport { ColorSettingsPropTypes } from \"../types\";\r\n\r\n/**\r\n *\r\n * @param {object} props - Color settings props\r\n * @param {string} props.label - Component Label\r\n * @param {string} props.attrKey - Attribute key for color\r\n *\r\n */\r\nfunction ColorSetting({ attrKey, label }: ColorSettingsPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n\r\n    // @ts-ignore\r\n    const attributes = useSelect((select) => {\r\n        // @ts-ignore\r\n        return select(\"core/block-editor\").getBlockAttributes(clientId);\r\n    });\r\n\r\n    const setAttributes = (newAttributes: object) =>\r\n        updateBlockAttributes(clientId, newAttributes);\r\n    const colorGradientSettings = useMultipleOriginColorsAndGradients();\r\n    // @ts-ignore\r\n    const { defaultColors } = useSelect((select) => {\r\n        return {\r\n            defaultColors:\r\n                // @ts-ignore\r\n                select(\"core/block-editor\")?.getSettings()\r\n                    ?.__experimentalFeatures?.color?.palette?.default,\r\n        };\r\n    });\r\n\r\n    return (\r\n        <ColorGradientSettingsDropdown\r\n            {...colorGradientSettings}\r\n            enableAlpha\r\n            panelId={clientId}\r\n            title={__(\"Color Settings\", \"gutenberghub-tabs\")}\r\n            popoverProps={{\r\n                placement: \"left start\",\r\n            }}\r\n            settings={[\r\n                {\r\n                    clearable: true,\r\n                    resetAllFilter: () =>\r\n                        setAttributes({\r\n                            [attrKey]: null,\r\n                        }),\r\n                    colorValue: attributes[attrKey],\r\n                    colors: defaultColors,\r\n                    label: label,\r\n                    onColorChange: (newValue: string | null) =>\r\n                        setAttributes({ [attrKey]: newValue }),\r\n                },\r\n            ]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ColorSetting;\r\n","export { default as BorderControl } from \"./border-control\";\r\nexport { default as CustomToggleGroupControl } from \"./toggle-group-control\";\r\nexport { default as SpacingControl } from \"./spacing-control\";\r\nexport { default as ColorSettings } from \"./color-settings/color-settings\";\r\nexport { default as ColorSettingsWithGradient } from \"./color-settings/color-settings-with-gradient\";\r\n","/**\r\n * WordPress Dependencies\r\n */\r\n//@ts-ignore\r\nimport { isEmpty } from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport {\r\n    //@ts-ignore\r\n    useBlockEditContext,\r\n    //@ts-ignore\r\n    __experimentalSpacingSizesControl as SpacingSizesControl,\r\n} from \"@wordpress/block-editor\";\r\nimport { useSelect, useDispatch } from \"@wordpress/data\";\r\nimport { __experimentalToolsPanelItem as ToolsPanelItem } from \"@wordpress/components\";\r\nimport { SpacingPropTypes } from \"../types\";\r\n\r\nfunction SpacingControl({\r\n    label,\r\n    attrKey,\r\n    showByDefault = false,\r\n}: SpacingPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n\r\n    //@ts-ignore\r\n    const attributes = useSelect(\r\n        (select) =>\r\n            //@ts-ignore\r\n            select(\"core/block-editor\").getSelectedBlock().attributes\r\n    );\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n\r\n    const setAttributes = (newAttributes: object) => {\r\n        updateBlockAttributes(clientId, newAttributes);\r\n    };\r\n    return (\r\n        <>\r\n            <ToolsPanelItem\r\n                panelId={clientId}\r\n                isShownByDefault={showByDefault}\r\n                resetAllFilter={() => {\r\n                    setAttributes({\r\n                        [attrKey]: {},\r\n                    });\r\n                }}\r\n                className={\"tools-panel-item-spacing\"}\r\n                label={label}\r\n                onDeselect={() => setAttributes({ [attrKey]: {} })}\r\n                hasValue={() => !isEmpty(attributes[attrKey])}\r\n            >\r\n                <SpacingSizesControl\r\n                    allowReset={true}\r\n                    label={label}\r\n                    values={attributes[attrKey]}\r\n                    sides={[\"top\", \"right\", \"bottom\", \"left\"]}\r\n                    onChange={(newValue: any) => {\r\n                        setAttributes({\r\n                            [attrKey]: newValue,\r\n                        });\r\n                    }}\r\n                />\r\n            </ToolsPanelItem>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpacingControl;\r\n","/**\r\n * WordPress Dependencies\r\n */\r\nimport { useDispatch, useSelect } from \"@wordpress/data\";\r\n//@ts-ignore\r\nimport { useBlockEditContext } from \"@wordpress/block-editor\";\r\nimport {\r\n    __experimentalToggleGroupControl as ToggleGroupControl,\r\n    __experimentalToggleGroupControlOptionIcon as ToggleGroupControlOptionIcon,\r\n    __experimentalToggleGroupControlOption as ToggleGroupControlOption,\r\n} from \"@wordpress/components\";\r\nimport { ToggleGroupControlPropTypes } from \"../types\";\r\n\r\nfunction CustomToggleGroupControl({\r\n    label,\r\n    options,\r\n    attributeKey,\r\n    isBlock = false,\r\n    isAdaptiveWidth = false,\r\n    isDeselectable = false,\r\n}: ToggleGroupControlPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n\r\n    //@ts-ignore\r\n    const attributes = useSelect((select) => {\r\n        //@ts-ignore\r\n        return select(\"core/block-editor\").getBlockAttributes(clientId);\r\n    });\r\n    const setAttributes = (newAttributes: object) =>\r\n        updateBlockAttributes(clientId, newAttributes);\r\n\r\n    return (\r\n        <ToggleGroupControl\r\n            label={label}\r\n            isBlock={isBlock}\r\n            isDeselectable={isDeselectable}\r\n            isAdaptiveWidth={isAdaptiveWidth}\r\n            __nextHasNoMarginBottom\r\n            value={attributes[attributeKey]}\r\n            onChange={(newValue) => {\r\n                setAttributes({\r\n                    [attributeKey]: newValue,\r\n                });\r\n            }}\r\n        >\r\n            {options.map(({ value, icon = null, label }) => {\r\n                return icon ? (\r\n                    <ToggleGroupControlOptionIcon\r\n                        key={value}\r\n                        value={value}\r\n                        icon={icon}\r\n                        label={label}\r\n                    />\r\n                ) : (\r\n                    <ToggleGroupControlOption\r\n                        key={value}\r\n                        value={value}\r\n                        label={label}\r\n                    />\r\n                );\r\n            })}\r\n        </ToggleGroupControl>\r\n    );\r\n}\r\n\r\nexport default CustomToggleGroupControl;\r\n","//@ts-ignore\r\nimport { get } from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\n//@ts-ignore\r\nimport { useEffect } from \"@wordpress/element\";\r\nimport { caption as captionIcon, crop } from \"@wordpress/icons\";\r\nimport {\r\n    BlockControls as WPBlockControls,\r\n    //@ts-ignore\r\n    MediaReplaceFlow,\r\n    // @ts-ignore\r\n    __experimentalImageURLInputUI as ImageURLInputUI,\r\n} from \"@wordpress/block-editor\";\r\n//@ts-ignore\r\nimport { usePrevious } from \"@wordpress/compose\";\r\nimport { ToolbarButton, ToolbarGroup } from \"@wordpress/components\";\r\nimport type { ExtendMainPropTypes } from \"./types\";\r\n\r\nfunction BlockControls(props: ExtendMainPropTypes) {\r\n    const {\r\n        attributes,\r\n        setAttributes,\r\n        setShowCaption,\r\n        showCaption,\r\n        setIsEditingImage,\r\n    } = props;\r\n    const {\r\n        media,\r\n        caption,\r\n        linkClass,\r\n        linkDestination,\r\n        linkTarget,\r\n        href,\r\n        rel,\r\n    } = attributes;\r\n    const prevCaption = usePrevious(caption);\r\n\r\n    useEffect(() => {\r\n        if (caption && !prevCaption) {\r\n            setShowCaption(true);\r\n        }\r\n    }, [caption, prevCaption]);\r\n    const imageUrl = get(media, \"url\", \"\");\r\n    const mediaId = get(media, \"id\", -1);\r\n    const imageLink = get(media, \"link\", \"\");\r\n    function onSetHref(props: any) {\r\n        setAttributes(props);\r\n    }\r\n    return (\r\n        <>\r\n            {/* @ts-ignore */}\r\n            <WPBlockControls group={\"block\"}>\r\n                <ToolbarButton\r\n                    onClick={() => {\r\n                        setShowCaption(!showCaption);\r\n                        if (showCaption && caption) {\r\n                            setAttributes({ caption: undefined });\r\n                        }\r\n                    }}\r\n                    icon={captionIcon}\r\n                    isPressed={showCaption}\r\n                    label={\r\n                        showCaption ? __(\"Remove caption\") : __(\"Add caption\")\r\n                    }\r\n                />\r\n                <ImageURLInputUI\r\n                    url={href || \"\"}\r\n                    onChangeUrl={onSetHref}\r\n                    linkDestination={linkDestination}\r\n                    mediaUrl={imageUrl}\r\n                    mediaLink={imageLink}\r\n                    linkTarget={linkTarget}\r\n                    linkClass={linkClass}\r\n                    rel={rel}\r\n                />\r\n                <ToolbarButton\r\n                    onClick={() => setIsEditingImage(true)}\r\n                    icon={crop}\r\n                    label={__(\"Crop\", \"tableberg\")}\r\n                />\r\n            </WPBlockControls>\r\n            <WPBlockControls>\r\n                <ToolbarGroup>\r\n                    <MediaReplaceFlow\r\n                        mediaURL={imageUrl}\r\n                        mediaId={mediaId}\r\n                        onSelect={(newMedia: any) =>\r\n                            setAttributes({\r\n                                media: newMedia,\r\n                                alt: newMedia.alt,\r\n                            })\r\n                        }\r\n                        name={__(\"Replace\", \"tableberg\")}\r\n                    />\r\n                </ToolbarGroup>\r\n            </WPBlockControls>\r\n        </>\r\n    );\r\n}\r\nexport default BlockControls;\r\n","import { __ } from \"@wordpress/i18n\";\r\n\r\nexport const DEFAULT_ASPECT_RATIO_OPTIONS = [\r\n    {\r\n        label: __(\"Original\", \"tableberg\"),\r\n        value: \"\",\r\n    },\r\n    {\r\n        label: __(\"Square - 1:1\", \"tableberg\"),\r\n        value: \"1\",\r\n    },\r\n    {\r\n        label: __(\"Standard - 4:3\", \"tableberg\"),\r\n        value: \"4/3\",\r\n    },\r\n    {\r\n        label: __(\"Portrait - 3:4\", \"tableberg\"),\r\n        value: \"3/4\",\r\n    },\r\n    {\r\n        label: __(\"Classic - 3:2\", \"tableberg\"),\r\n        value: \"3/2\",\r\n    },\r\n    {\r\n        label: __(\"Classic Portrait - 2:3\", \"tableberg\"),\r\n        value: \"2/3\",\r\n    },\r\n    {\r\n        label: __(\"Wide - 16:9\", \"tableberg\"),\r\n        value: \"16/9\",\r\n    },\r\n    {\r\n        label: __(\"Tall - 9:16\", \"tableberg\"),\r\n        value: \"9/16\",\r\n    },\r\n];\r\n\r\nexport const DEFAULT_SCALE_OPTIONS = [\r\n    {\r\n        value: \"cover\",\r\n        label: __(\"Cover\", \"tableberg\"),\r\n        help: __(\"Fill the space by clipping what doesn't fit.\"),\r\n    },\r\n    {\r\n        value: \"contain\",\r\n        label: __(\"Contain\", \"tableberg\"),\r\n        help: __(\"Fit the content to the space without clipping.\"),\r\n    },\r\n];\r\n\r\nexport const DEFAULT_SIZE_SLUG_OPTIONS = [\r\n    {\r\n        label: __(\"Thumbnail\", \"tableberg\"),\r\n        value: \"thumbnail\",\r\n    },\r\n    {\r\n        label: __(\"Medium\", \"tableberg\"),\r\n        value: \"medium\",\r\n    },\r\n    {\r\n        label: __(\"Large\", \"tableberg\"),\r\n        value: \"large\",\r\n    },\r\n    {\r\n        label: __(\"Full Size\", \"tableberg\"),\r\n        value: \"full\",\r\n    },\r\n];\r\n","// @ts-ignore\r\nimport { isEmpty, get } from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { useDispatch } from \"@wordpress/data\";\r\n// @ts-ignore\r\nimport { useState, useRef, useMemo } from \"@wordpress/element\";\r\nimport { BlockEditProps } from \"@wordpress/blocks\";\r\nimport CustomMediaPlaceholder from \"./media-placeholder\";\r\nimport { ResizableBox } from \"@wordpress/components\";\r\nimport {\r\n    RichText,\r\n    useBlockProps,\r\n    // @ts-ignore\r\n    __experimentalGetElementClassName,\r\n    // @ts-ignore\r\n    __experimentalImageEditor as ImageEditor,\r\n} from \"@wordpress/block-editor\";\r\nimport Image from \"./image\";\r\nimport Inspector from \"./inspector\";\r\nimport BlockControls from \"./block-controls\";\r\nimport type { AttributesTypes } from \"./types\";\r\n\r\nfunction Edit(props: BlockEditProps<AttributesTypes>) {\r\n    const { attributes, setAttributes, isSelected } = props;\r\n    const { media, height, width, caption } = attributes;\r\n    const [showCaption, setShowCaption] = useState(!!caption);\r\n    const [isImageEditing, setIsEditingImage] = useState(false);\r\n    const imageRef = useRef<HTMLImageElement | null>(null);\r\n    const blockProps = useBlockProps();\r\n    const hasImage = !isEmpty(media);\r\n    const { toggleSelection } = useDispatch(\"core/block-editor\");\r\n    const { naturalWidth, naturalHeight } = useMemo(() => {\r\n        return {\r\n            naturalWidth: imageRef.current?.naturalWidth || undefined,\r\n            naturalHeight: imageRef.current?.naturalHeight || undefined,\r\n        };\r\n    }, [imageRef.current?.complete]);\r\n\r\n    const onResizeStart = () => {\r\n        toggleSelection(false);\r\n    };\r\n\r\n    const onResizeStop = () => {\r\n        toggleSelection(true);\r\n    };\r\n\r\n    // clientWidth needs to be a number for the image Cropper to work, but sometimes it's 0\r\n    // So we try using the imageRef width first and fallback to clientWidth.\r\n    const fallbackClientWidth = imageRef.current?.width;\r\n    const id = get(media, \"id\", \"\");\r\n    const sizeSlug = get(attributes, \"sizeSlug\", \"large\");\r\n    const url = get(media, `sizes.${sizeSlug}.url`, \"\");\r\n    // The only supported unit is px, so we can parseInt to strip the px here.\r\n    const numericWidth = width ? parseInt(width, 10) : undefined;\r\n    const numericHeight = height ? parseInt(height, 10) : undefined;\r\n\r\n    return (\r\n        <figure {...blockProps}>\r\n            {hasImage && (\r\n                <>\r\n                    <BlockControls\r\n                        setIsEditingImage={setIsEditingImage}\r\n                        showCaption={showCaption}\r\n                        setShowCaption={setShowCaption}\r\n                        attributes={attributes}\r\n                        setAttributes={setAttributes}\r\n                    />\r\n                    {!isImageEditing && (\r\n                        <ResizableBox\r\n                            size={{\r\n                                width,\r\n                                height,\r\n                            }}\r\n                            showHandle={isSelected}\r\n                            minWidth={\"50\"}\r\n                            minHeight={\"50\"}\r\n                            enable={{\r\n                                top: false,\r\n                                right: true,\r\n                                bottom: true,\r\n                                left: false,\r\n                            }}\r\n                            onResizeStart={onResizeStart}\r\n                            onResizeStop={(event, direction, elt) => {\r\n                                onResizeStop();\r\n                                // Since the aspect ratio is locked when resizing, we can\r\n                                // use the width of the resized element to calculate the\r\n                                // height in CSS to prevent stretching when the max-width\r\n                                // is reached.\r\n                                setAttributes({\r\n                                    width: `${elt.offsetWidth}px`,\r\n                                    height: `${elt.offsetHeight}px`,\r\n                                });\r\n                            }}\r\n                        >\r\n                            <Image\r\n                                imageRef={imageRef}\r\n                                attributes={attributes}\r\n                                setAttributes={setAttributes}\r\n                            />\r\n                            {showCaption &&\r\n                                (!RichText.isEmpty(caption) || isSelected) && (\r\n                                    <RichText\r\n                                        identifier=\"caption\"\r\n                                        className={__experimentalGetElementClassName(\r\n                                            \"caption\"\r\n                                        )}\r\n                                        tagName=\"figcaption\"\r\n                                        aria-label={__(\r\n                                            \"Image caption text\",\r\n                                            \"tableberg\"\r\n                                        )}\r\n                                        placeholder={__(\r\n                                            \"Add caption\",\r\n                                            \"tableberg\"\r\n                                        )}\r\n                                        value={caption}\r\n                                        onChange={(value: string) =>\r\n                                            setAttributes({ caption: value })\r\n                                        }\r\n                                        inlineToolbar\r\n                                    />\r\n                                )}\r\n                        </ResizableBox>\r\n                    )}\r\n                    {isImageEditing && (\r\n                        <ImageEditor\r\n                            id={id}\r\n                            url={url}\r\n                            width={numericWidth}\r\n                            height={numericHeight}\r\n                            clientWidth={fallbackClientWidth}\r\n                            naturalHeight={naturalHeight}\r\n                            naturalWidth={naturalWidth}\r\n                            onSaveImage={(imageAttributes: any) => {\r\n                                setAttributes({\r\n                                    media: {\r\n                                        ...media,\r\n                                        ...imageAttributes,\r\n                                        sizes: {\r\n                                            ...media.sizes,\r\n                                            [sizeSlug]: {\r\n                                                // @ts-ignore\r\n                                                ...media.sizes[sizeSlug],\r\n                                                ...imageAttributes,\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                });\r\n                            }}\r\n                            onFinishEditing={() => {\r\n                                setIsEditingImage(false);\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <Inspector\r\n                        attributes={attributes}\r\n                        setAttributes={setAttributes}\r\n                    />\r\n                </>\r\n            )}\r\n            {!hasImage && (\r\n                <CustomMediaPlaceholder\r\n                    attributes={attributes}\r\n                    setAttributes={setAttributes}\r\n                />\r\n            )}\r\n        </figure>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n","// @ts-ignore\r\nimport { get } from \"lodash\";\r\nimport type { ImageTypes } from \"./types\";\r\nimport {\r\n    getBorderCSS,\r\n    getSingleSideBorderValue,\r\n} from \"../utils/styling-helpers\";\r\n\r\nfunction Image(props: ImageTypes) {\r\n    const { attributes, imageRef } = props;\r\n\r\n    const sizeSlug = get(attributes, \"sizeSlug\", \"large\");\r\n    const imageSrc = get(\r\n        attributes,\r\n        `media.sizes.${sizeSlug}.url`,\r\n        attributes.media?.url ?? \"\"\r\n    );\r\n    const mediaAlt = get(attributes, \"alt\", \"\");\r\n    const aspectRatio = get(attributes, \"aspectRatio\", \"\");\r\n    const scale = get(attributes, \"scale\", \"\");\r\n    const width = get(attributes, \"width\", \"\");\r\n    const height = get(attributes, \"height\", \"\");\r\n    const borderAttr = get(attributes, \"border\", \"\");\r\n    const borderRadius = get(attributes, \"borderRadius\", \"\");\r\n    const border = getBorderCSS(borderAttr);\r\n\r\n    return (\r\n        <img\r\n            // @ts-ignore\r\n            ref={imageRef}\r\n            style={{\r\n                aspectRatio,\r\n                objectFit: scale,\r\n                width,\r\n                height,\r\n                borderTopLeftRadius: borderRadius.topLeft,\r\n                borderTopRightRadius: borderRadius.topRight,\r\n                borderBottomLeftRadius: borderRadius.bottomLeft,\r\n                borderBottomRightRadius: borderRadius.bottomRight,\r\n                borderTop: getSingleSideBorderValue(border, \"top\"),\r\n                borderRight: getSingleSideBorderValue(border, \"right\"),\r\n                borderBottom: getSingleSideBorderValue(border, \"bottom\"),\r\n                borderLeft: getSingleSideBorderValue(border, \"left\"),\r\n            }}\r\n            src={imageSrc}\r\n            alt={mediaAlt}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Image;\r\n","import { registerBlockType } from \"@wordpress/blocks\";\r\n\r\nimport { image } from \"@wordpress/icons\";\r\n\r\nimport \"./style.scss\";\r\nimport edit from \"./edit\";\r\n\r\nimport metadata from \"./block.json\";\r\n\r\nregisterBlockType(metadata, {\r\n    icon: image,\r\n    title: metadata.title,\r\n    category: metadata.category,\r\n    edit,\r\n    save: () => null,\r\n});\r\n","/**\r\n * Wordpress Dependencies\r\n */\r\nimport { InspectorControls } from \"@wordpress/block-editor\";\r\n//@ts-ignore\r\nimport { useMemo } from \"@wordpress/element\";\r\nimport {\r\n    PanelBody,\r\n    SelectControl,\r\n    TextareaControl,\r\n    __experimentalToolsPanel as ToolsPanel,\r\n    __experimentalUnitControl as UnitControl,\r\n    __experimentalToolsPanelItem as ToolsPanelItem,\r\n    __experimentalToggleGroupControl as ToggleGroupControl,\r\n    __experimentalToggleGroupControlOption as ToggleGroupControlOption,\r\n} from \"@wordpress/components\";\r\nimport { __ } from \"@wordpress/i18n\";\r\n/***\r\n * Internal imports\r\n */\r\nimport type { MainPropTypes } from \"./types\";\r\nimport {\r\n    DEFAULT_ASPECT_RATIO_OPTIONS,\r\n    DEFAULT_SCALE_OPTIONS,\r\n    DEFAULT_SIZE_SLUG_OPTIONS,\r\n} from \"./constants\";\r\nimport { BorderControl } from \"../components\";\r\n\r\nfunction Inspector(props: MainPropTypes) {\r\n    const { attributes, setAttributes } = props;\r\n    const { alt, aspectRatio, height, scale, width, sizeSlug } = attributes;\r\n    const resetAll = () => {\r\n        setAttributes({\r\n            alt: \"\",\r\n            aspectRatio: \"\",\r\n            height: \"\",\r\n            scale: \"cover\",\r\n            width: \"\",\r\n        });\r\n    };\r\n    const scaleOptions = DEFAULT_SCALE_OPTIONS;\r\n    // Match the CSS default so if the value is used directly in CSS it will look correct in the control.\r\n    const aspectRatioDisplayValue = aspectRatio ?? \"auto\";\r\n    const scaleDisplayValue = scale ?? \"cover\";\r\n    const scaleHelp = useMemo(() => {\r\n        return scaleOptions.reduce((acc, option) => {\r\n            //@ts-ignore\r\n            acc[option.value] = option.help;\r\n            return acc;\r\n        }, {});\r\n    }, [scaleOptions]);\r\n    const aspectRatioOptions = DEFAULT_ASPECT_RATIO_OPTIONS;\r\n\r\n    return (\r\n        <>\r\n            <InspectorControls>\r\n                <ToolsPanel\r\n                    label={__(\"Settings\", \"tableberg\")}\r\n                    resetAll={resetAll}\r\n                >\r\n                    <ToolsPanelItem\r\n                        isShownByDefault\r\n                        hasValue={() => !!alt}\r\n                        label={__(\"Alternative Text\", \"tableberg\")}\r\n                        onDeselect={() => setAttributes({ alt: \"\" })}\r\n                    >\r\n                        <TextareaControl\r\n                            __nextHasNoMarginBottom\r\n                            value={alt}\r\n                            label={__(\"Alternative Text\", \"tableberg\")}\r\n                            onChange={(newValue: string) =>\r\n                                setAttributes({ alt: newValue })\r\n                            }\r\n                        />\r\n                    </ToolsPanelItem>\r\n                    <ToolsPanelItem\r\n                        isShownByDefault\r\n                        label={__(\"Aspect ratio\", \"tableberg\")}\r\n                        onDeselect={() => setAttributes({ aspectRatio: \"\" })}\r\n                        hasValue={() =>\r\n                            aspectRatioDisplayValue !==\r\n                            aspectRatioOptions[0].value\r\n                        }\r\n                    >\r\n                        <SelectControl\r\n                            value={aspectRatioDisplayValue}\r\n                            __nextHasNoMarginBottom\r\n                            size={\"__unstable-large\"}\r\n                            options={aspectRatioOptions}\r\n                            label={__(\"Aspect ratio\", \"tableberg\")}\r\n                            onChange={(newValue) =>\r\n                                setAttributes({ aspectRatio: newValue })\r\n                            }\r\n                        />\r\n                    </ToolsPanelItem>\r\n                    {aspectRatio !== DEFAULT_ASPECT_RATIO_OPTIONS[0].value && (\r\n                        <ToolsPanelItem\r\n                            label={__(\"Scale\", \"tableberg\")}\r\n                            isShownByDefault\r\n                            hasValue={() =>\r\n                                scaleDisplayValue !== scaleOptions[0].value\r\n                            }\r\n                            onDeselect={() =>\r\n                                setAttributes({ scale: scaleOptions[0].value })\r\n                            }\r\n                        >\r\n                            <ToggleGroupControl\r\n                                label={__(\"Scale\", \"tableberg\")}\r\n                                isBlock\r\n                                help={scaleHelp[scaleDisplayValue]}\r\n                                value={scaleDisplayValue}\r\n                                onChange={(newScale) =>\r\n                                    setAttributes({ scale: newScale })\r\n                                }\r\n                                __nextHasNoMarginBottom\r\n                            >\r\n                                {scaleOptions.map((option) => (\r\n                                    <ToggleGroupControlOption\r\n                                        key={option.value}\r\n                                        {...option}\r\n                                    />\r\n                                ))}\r\n                            </ToggleGroupControl>\r\n                        </ToolsPanelItem>\r\n                    )}\r\n                    <div className=\"tableberg-width-height-control\">\r\n                        <ToolsPanelItem\r\n                            isShownByDefault\r\n                            label={__(\"Width\", \"tableberg\")}\r\n                            hasValue={() => width !== \"\"}\r\n                            onDeselect={() => setAttributes({ width: \"\" })}\r\n                        >\r\n                            <UnitControl\r\n                                label={__(\"Width\", \"tableberg\")}\r\n                                placeholder={__(\"Auto\", \"tableberg\")}\r\n                                labelPosition=\"top\"\r\n                                units={[\r\n                                    { value: \"px\", label: \"px\", default: 0 },\r\n                                ]}\r\n                                min={0}\r\n                                value={width}\r\n                                onChange={(\r\n                                    newWidth: string | number | undefined\r\n                                ) => setAttributes({ width: newWidth })}\r\n                                size={\"__unstable-large\"}\r\n                            />\r\n                        </ToolsPanelItem>\r\n                        <ToolsPanelItem\r\n                            isShownByDefault\r\n                            label={__(\"height\", \"tableberg\")}\r\n                            hasValue={() => height !== \"\"}\r\n                            onDeselect={() => setAttributes({ height: \"\" })}\r\n                        >\r\n                            <UnitControl\r\n                                label={__(\"Height\", \"tableberg\")}\r\n                                placeholder={__(\"Auto\", \"tableberg\")}\r\n                                labelPosition=\"top\"\r\n                                units={[\r\n                                    { value: \"px\", label: \"px\", default: 0 },\r\n                                ]}\r\n                                min={0}\r\n                                value={height}\r\n                                onChange={(\r\n                                    newHeight: string | number | undefined\r\n                                ) => setAttributes({ height: newHeight })}\r\n                                size={\"__unstable-large\"}\r\n                            />\r\n                        </ToolsPanelItem>\r\n                    </div>\r\n                    <ToolsPanelItem\r\n                        isShownByDefault\r\n                        label={__(\"Resolution\", \"tableberg\")}\r\n                        hasValue={() =>\r\n                            sizeSlug !== DEFAULT_SIZE_SLUG_OPTIONS[0].value\r\n                        }\r\n                        onDeselect={() =>\r\n                            setAttributes({\r\n                                sizeSlug: DEFAULT_SIZE_SLUG_OPTIONS[0].value,\r\n                            })\r\n                        }\r\n                    >\r\n                        <SelectControl\r\n                            label={__(\"Resolution\", \"tableberg\")}\r\n                            value={sizeSlug}\r\n                            options={DEFAULT_SIZE_SLUG_OPTIONS}\r\n                            onChange={(newSlug: string) =>\r\n                                setAttributes({ sizeSlug: newSlug })\r\n                            }\r\n                            help={__(\r\n                                \"Select the size of the source image.\",\r\n                                \"tableberg\"\r\n                            )}\r\n                            size={\"__unstable-large\"}\r\n                        />\r\n                    </ToolsPanelItem>\r\n                </ToolsPanel>\r\n            </InspectorControls>\r\n            {/* @ts-ignore */}\r\n            <InspectorControls group=\"border\">\r\n                <BorderControl\r\n                    attrBorderKey=\"border\"\r\n                    attrBorderRadiusKey=\"borderRadius\"\r\n                    borderLabel={__(\"Border\", \"tableberg\")}\r\n                    borderRadiusLabel={__(\"Border Radius\")}\r\n                />\r\n            </InspectorControls>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Inspector;\r\n","import { ReactNode } from \"react\";\r\n// @ts-ignore\r\nimport { get, isEmpty } from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { Placeholder } from \"@wordpress/components\";\r\nimport { image as imageIcon } from \"@wordpress/icons\";\r\nimport { MediaPlaceholder } from \"@wordpress/block-editor\";\r\nimport type { AttributesTypes, MainPropTypes } from \"./types\";\r\n\r\nfunction CustomMediaPlaceholder(props: MainPropTypes) {\r\n    const {\r\n        attributes: { media },\r\n        setAttributes,\r\n    } = props;\r\n\r\n    const placeholder = (content: ReactNode) => {\r\n        return (\r\n            <Placeholder\r\n                className={\"block-editor-media-placeholder\"}\r\n                withIllustration={true}\r\n                icon={imageIcon}\r\n                label={__(\"Image\", \"tableberg\")}\r\n                instructions={__(\r\n                    \"Upload an image file, pick one from your media library, or add one with a URL.\"\r\n                )}\r\n            >\r\n                {content}\r\n            </Placeholder>\r\n        );\r\n    };\r\n    function onSelectImage(media: any) {\r\n        if (!media || !media.url) {\r\n            setAttributes({\r\n                media: {},\r\n            });\r\n        } else {\r\n            let alt = media.alt;\r\n            setAttributes({ media, alt });\r\n        }\r\n    }\r\n    const id = get(media, \"id\", -1);\r\n    return (\r\n        <MediaPlaceholder\r\n            icon={imageIcon}\r\n            accept=\"image/*\"\r\n            // @ts-ignore\r\n            placeholder={placeholder}\r\n            //  onError={onUploadError}\r\n            onSelect={onSelectImage}\r\n            //  onSelectURL={onSelectURL}\r\n            allowedTypes={[\"image\"]}\r\n            value={id}\r\n            //  mediaPreview={mediaPreview}\r\n            //  disableMediaButtons={temporaryURL || url}\r\n        />\r\n    );\r\n}\r\nexport default CustomMediaPlaceholder;\r\n","// @ts-ignore\r\nimport { isEmpty, has } from \"lodash\";\r\nimport { __experimentalHasSplitBorders as hasSplitBorders } from \"@wordpress/components\";\r\nimport { BorderTypes } from \"../types\";\r\n\r\nexport const getBorderCSS = (object: object) => {\r\n    let borders: BorderTypes = {};\r\n\r\n    if (!hasSplitBorders(object)) {\r\n        borders[\"top\"] = object;\r\n        borders[\"right\"] = object;\r\n        borders[\"bottom\"] = object;\r\n        borders[\"left\"] = object;\r\n        return borders;\r\n    }\r\n    return object;\r\n};\r\n\r\nexport function getSingleSideBorderValue(\r\n    border: BorderTypes,\r\n    side: keyof BorderTypes\r\n) {\r\n    const { width = \"\", style = \"\", color = \"\" } = border[side] || {};\r\n    if (isEmpty(width)) {\r\n        return \"\";\r\n    }\r\n    const borderWidth = width || \"0\";\r\n    const borderStyle = isEmpty(style) ? \"solid\" : style;\r\n\r\n    return `${borderWidth} ${borderStyle} ${color}`;\r\n}\r\n\r\nexport function getBorderVariablesCss(border: object, slug: string) {\r\n    const borderInFourDimension = getBorderCSS(border);\r\n    const borderSides = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    let borders = {};\r\n    for (let i = 0; i < borderSides.length; i++) {\r\n        const side = borderSides[i];\r\n        const sideProperty = [`--tableberg-${slug}-border-${side}`];\r\n        // @ts-ignore\r\n        const sideValue = getSingleSideBorderValue(borderInFourDimension, side);\r\n        // @ts-ignore\r\n        borders[sideProperty] = sideValue;\r\n    }\r\n\r\n    return borders;\r\n}\r\n/**\r\n *  Check values are mixed.\r\n * @param {any} values - value string or object\r\n * @returns true | false\r\n */\r\nexport function hasMixedValues(values = {}) {\r\n    return typeof values === \"string\";\r\n}\r\nexport function splitBorderRadius(value: string | object) {\r\n    const isValueMixed = hasMixedValues(value);\r\n    const splittedBorderRadius = {\r\n        topLeft: value,\r\n        topRight: value,\r\n        bottomLeft: value,\r\n        bottomRight: value,\r\n    };\r\n    return isValueMixed ? splittedBorderRadius : value;\r\n}\r\n\r\n/**\r\n * Checks is given value is a spacing preset.\r\n *\r\n * @param {string} value Value to check\r\n *\r\n * @return {boolean} Return true if value is string in format var:preset|spacing|.\r\n */\r\nexport function isValueSpacingPreset(value: string) {\r\n    if (!value?.includes) {\r\n        return false;\r\n    }\r\n    return value === \"0\" || value.includes(\"var:preset|spacing|\");\r\n}\r\n\r\n/**\r\n * Converts a spacing preset into a custom value.\r\n *\r\n * @param {string} value Value to convert.\r\n *\r\n * @return {string | undefined} CSS var string for given spacing preset value.\r\n */\r\nexport function getSpacingPresetCssVar(value: string) {\r\n    if (!value) {\r\n        return;\r\n    }\r\n\r\n    const slug = value.match(/var:preset\\|spacing\\|(.+)/);\r\n\r\n    if (!slug) {\r\n        return value;\r\n    }\r\n\r\n    return `var(--wp--preset--spacing--${slug[1]})`;\r\n}\r\n\r\nexport function getSpacingCss(object: object) {\r\n    let css = {};\r\n    //@ts-ignore\r\n    for (const [key, value] of Object.entries(object)) {\r\n        if (isValueSpacingPreset(value)) {\r\n            //@ts-ignore\r\n            css[key] = getSpacingPresetCssVar(value);\r\n        } else {\r\n            //@ts-ignore\r\n            css[key] = value;\r\n        }\r\n    }\r\n    return css;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"image/index\": 0,\n\t\"image/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunktableberg\"] = globalThis[\"webpackChunktableberg\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"image/style-index\"], () => (__webpack_require__(\"./src/image/index.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["isEmpty","useBlockEditContext","__experimentalBorderRadiusControl","BorderRadiusControl","useSelect","useDispatch","BaseControl","__experimentalToolsPanelItem","ToolsPanelItem","__experimentalBorderBoxControl","BorderBoxControl","splitBorderRadius","value","isValueMixed","splittedBorderRadius","topLeft","topRight","bottomLeft","bottomRight","BorderControl","borderLabel","attrBorderKey","borderRadiusLabel","attrBorderRadiusKey","showBorder","showBorderRadius","showDefaultBorder","showDefaultBorderRadius","clientId","attributes","select","getSelectedBlock","updateBlockAttributes","setAttributes","newAttributes","defaultColors","getSettings","__experimentalFeatures","color","palette","default","createElement","Fragment","panelId","isShownByDefault","resetAllFilter","hasValue","label","onDeselect","enableAlpha","size","colors","onChange","newBorder","VisualLabel","as","className","values","newBorderRadius","splitted","__","__experimentalColorGradientSettingsDropdown","ColorGradientSettingsDropdown","__experimentalUseMultipleOriginColorsAndGradients","useMultipleOriginColorsAndGradients","ColorSettingWithGradient","attrBackgroundKey","attrGradientKey","getBlockAttributes","colorGradientSettings","defaultGradients","gradients","title","popoverProps","placement","settings","clearable","colorValue","gradientValue","onColorChange","newValue","onGradientChange","ColorSetting","attrKey","CustomToggleGroupControl","SpacingControl","ColorSettings","ColorSettingsWithGradient","__experimentalSpacingSizesControl","SpacingSizesControl","showByDefault","allowReset","sides","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOptionIcon","ToggleGroupControlOptionIcon","__experimentalToggleGroupControlOption","ToggleGroupControlOption","options","attributeKey","isBlock","isAdaptiveWidth","isDeselectable","__nextHasNoMarginBottom","map","icon","key","get","useEffect","caption","captionIcon","crop","BlockControls","WPBlockControls","MediaReplaceFlow","__experimentalImageURLInputUI","ImageURLInputUI","usePrevious","ToolbarButton","ToolbarGroup","props","setShowCaption","showCaption","setIsEditingImage","media","linkClass","linkDestination","linkTarget","href","rel","prevCaption","imageUrl","mediaId","imageLink","onSetHref","group","onClick","undefined","isPressed","url","onChangeUrl","mediaUrl","mediaLink","mediaURL","onSelect","newMedia","alt","name","DEFAULT_ASPECT_RATIO_OPTIONS","DEFAULT_SCALE_OPTIONS","help","DEFAULT_SIZE_SLUG_OPTIONS","useState","useRef","useMemo","CustomMediaPlaceholder","ResizableBox","RichText","useBlockProps","__experimentalGetElementClassName","__experimentalImageEditor","ImageEditor","Image","Inspector","Edit","isSelected","height","width","isImageEditing","imageRef","blockProps","hasImage","toggleSelection","naturalWidth","naturalHeight","current","complete","onResizeStart","onResizeStop","fallbackClientWidth","id","sizeSlug","numericWidth","parseInt","numericHeight","showHandle","minWidth","minHeight","enable","top","right","bottom","left","event","direction","elt","offsetWidth","offsetHeight","identifier","tagName","placeholder","inlineToolbar","clientWidth","onSaveImage","imageAttributes","sizes","onFinishEditing","getBorderCSS","getSingleSideBorderValue","_attributes$media$url","imageSrc","mediaAlt","aspectRatio","scale","borderAttr","borderRadius","border","ref","style","objectFit","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTop","borderRight","borderBottom","borderLeft","src","registerBlockType","image","edit","metadata","category","save","InspectorControls","SelectControl","TextareaControl","__experimentalToolsPanel","ToolsPanel","__experimentalUnitControl","UnitControl","resetAll","scaleOptions","aspectRatioDisplayValue","scaleDisplayValue","scaleHelp","reduce","acc","option","aspectRatioOptions","newScale","labelPosition","units","min","newWidth","newHeight","newSlug","Placeholder","imageIcon","MediaPlaceholder","content","withIllustration","instructions","onSelectImage","accept","allowedTypes","__experimentalHasSplitBorders","hasSplitBorders","object","borders","side","borderWidth","borderStyle","getBorderVariablesCss","slug","borderInFourDimension","borderSides","i","length","sideProperty","sideValue","hasMixedValues","isValueSpacingPreset","includes","getSpacingPresetCssVar","match","getSpacingCss","css","Object","entries"],"sourceRoot":""}