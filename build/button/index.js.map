{"version":3,"file":"button/index.js","mappings":";;;;;;;;;;;;;;;;;;AAAmD;;AAEnD;AACA;AACA;AACkD;AAClD,gBAAgB,iEAAa,CAAC,sDAAG;AACjC;AACA;AACA,CAAC,EAAE,iEAAa,CAAC,uDAAI;AACrB;AACA,CAAC;AACD,iEAAe,OAAO,EAAC;AACvB;;;;;;;;;;;;;;;;;;;ACbmD;;AAEnD;AACA;AACA;AACkD;AAClD,aAAa,iEAAa,CAAC,sDAAG;AAC9B;AACA;AACA,CAAC,EAAE,iEAAa,CAAC,uDAAI;AACrB;AACA,CAAC;AACD,iEAAe,IAAI,EAAC;AACpB;;;;;;;;;;;;;;;;;ACbA;AACoD;AAG7C,SAASG,aAAaA,CAACC,UAA4B,EAAE;EACxD,MAAM;IACFC,oBAAoB;IACpBC,cAAc;IACdC,uBAAuB;IACvBC,eAAe;IACfC,SAAS;IACTC;EACJ,CAAC,GAAGN,UAAU;EACd,MAAMO,YAAY,GAAIC,KAAU,IAAK;IACjC,OACIZ,mDAAW,CAACY,KAAK,CAAC,IAClBA,KAAK,KAAK,KAAK,IACfX,4CAAI,CAACW,KAAK,CAAC,KAAK,EAAE,IAClBX,4CAAI,CAACW,KAAK,CAAC,KAAK,+BAA+B,IAC/CV,+CAAO,CAACU,KAAK,CAAC;EAEtB,CAAC;EAED,OAAO;IACH,sBAAsB,EAClB,CAACD,YAAY,CAACH,eAAe,CAAC,IAAI,CAACG,YAAY,CAACD,kBAAkB,CAAC;IACvE,4BAA4B,EACxB,CAACC,YAAY,CAACN,oBAAoB,CAAC,IACnC,CAACM,YAAY,CAACJ,uBAAuB,CAAC;IAC1C,sBAAsB,EAAE,CAACI,YAAY,CAACL,cAAc,CAAC;IACrD,gBAAgB,EAAE,CAACK,YAAY,CAACF,SAAS;EAC7C,CAAC;AACL;;;;;;;;;;;;;;;;;AChCA;AACsE;AAG/D,SAASK,SAASA,CAACV,UAA4B,EAAE;EACpD,MAAM;IACFI,eAAe;IACfE,kBAAkB;IAClBL,oBAAoB;IACpBE,uBAAuB;IACvBE,SAAS;IACTH;EACJ,CAAC,GAAGF,UAAU;EAEd,IAAIW,MAAM,GAAG;IACT,qCAAqC,EAAE,CAACb,+CAAO,CAACM,eAAe,CAAC,GAC1DA,eAAe,GACfE,kBAAkB;IACxB,qCAAqC,EAAEJ,cAAc;IACrD,+BAA+B,EAAEG,SAAS;IAC1C,2CAA2C,EAAE,CAACP,+CAAO,CACjDG,oBACJ,CAAC,GACKA,oBAAoB,GACpBE;EACV,CAAC;EAED,OAAOM,8CAAM,CACTE,MAAM,EACLH,KAAU,IACPA,KAAK,KAAK,KAAK,IACfV,+CAAO,CAACU,KAAK,CAAC,IACdZ,mDAAW,CAACY,KAAK,CAAC,IAClBX,4CAAI,CAACW,KAAK,CAAC,KAAK,EAAE,IAClBX,4CAAI,CAACW,KAAK,CAAC,KAAK,+BACxB,CAAC;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCoC;AAMT;AAC3B;AAC6C;AAC7C;AACkD;AAWnB;AAEK;AAiBH;AACwC;AAEnD;AAC2B;AACwB;AACpC;AACS;AAEL;AAEzC,MAAMmC,OAAO,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC;AACnE,MAAMC,WAAW,GAAG,qBAAqB;AAEzC,SAASC,IAAIA,CAAC;EACV7C,UAAU;EACV8C,aAAa;EACbC;AAC8B,CAAC,EAAE;EACjC,SAASC,UAAUA,CAAC;IAChBC,aAAa;IACbH;EAIJ,CAAC,EAAE;IACC,SAASI,YAAYA,CAACC,QAAgB,EAAE;MACpC;MACA,MAAMC,KAAK,GAAGH,aAAa,KAAKE,QAAQ,GAAGE,SAAS,GAAGF,QAAQ;;MAE/D;MACAL,aAAa,CAAC;QAAEM;MAAM,CAAC,CAAC;IAC5B;IAEA,OACIE,iEAAA,CAACpC,4DAAS;MAACqC,KAAK,EAAE;IAAiB,GAC/BD,iEAAA,CAACrC,8DAAW;MAAC,cAAY;IAAe,GACnC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAACuC,GAAG,CAAEC,UAAU,IAAK;MACnC,OACIH,iEAAA,CAACtC,yDAAM;QACH0C,GAAG,EAAED,UAAW;QAChBE,OAAO;QACPC,OAAO,EACHH,UAAU,KAAKR,aAAa,GACtB,SAAS,GACTI,SACT;QACDQ,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACO,UAAU;MAAE,GAEvCA,UAAU,EAAC,GACR,CAAC;IAEjB,CAAC,CACQ,CACN,CAAC;EAEpB;EAEA,MAAM;IAAEK,IAAI;IAAEC,KAAK;IAAEX,KAAK;IAAEY,SAAS;IAAEC,EAAE;IAAEC,GAAG;IAAEC,GAAG;IAAEC;EAAW,CAAC,GAC7DpE,UAAU;EACd,MAAMqE,GAAG,GAAGjC,6CAAM,CAAC,CAAC;EACpB,MAAMkC,WAAW,GAAGlC,6CAAM,CAAiB,CAAC;EAC5C,MAAMmC,QAAQ,GAAG,CAAC,CAACL,GAAG;EACtB,MAAMM,aAAa,GAAGJ,UAAU,KAAK,QAAQ;EAC7C,MAAMK,WAAW,GAAG5C,qFAAc,CAAC7B,UAAU,CAAC;EAE9C,MAAM,CAAC0E,YAAY,EAAEC,eAAe,CAAC,GAAGtC,+CAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxC,+CAAQ,CAAC,IAAI,CAAC;EAExD,MAAMyC,UAAU,GAAGpD,sEAAa,CAAC;IAC7B2C,GAAG,EAAEtD,gEAAY,CAAC,CAAC8D,gBAAgB,EAAER,GAAG,CAAC,CAAC;IAC1CU,SAAS,EAAEhF,4DAAa,CAACC,UAAU,CAAC;IACpCgF,KAAK,EAAEtE,uDAAS,CAACV,UAAU;EAC/B,CAAC,CAAC;EAEF,MAAMiF,gBAAgB,GAAIC,QAAqC,IAAK;IAChEpC,aAAa,CAAC;MAAEiB,KAAK,EAAEmB;IAAS,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,oBAAoB,GAAI3E,KAAc,IAAK;IAC7C,MAAM4E,aAAa,GAAG5E,KAAK,GAAG,QAAQ,GAAG6C,SAAS;IAElD,IAAI+B,aAAa,IAAI,CAACjB,GAAG,EAAE;MACvBkB,eAAe,CAACzC,WAAW,CAAC;IAChC;IAEAE,aAAa,CAAC;MACVsB,UAAU,EAAEgB;IAChB,CAAC,CAAC;EACN,CAAC;EAED,MAAME,YAAY,GAAIC,KAAiB,IAAK;IACxCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBb,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMc,MAAM,GAAGA,CAAA,KAAM;IACjB3C,aAAa,CAAC;MACVoB,GAAG,EAAEb,SAAS;MACde,UAAU,EAAEf,SAAS;MACrBc,GAAG,EAAEd;IACT,CAAC,CAAC;IACFsB,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAEDzC,gDAAS,CAAC,MAAM;IACZ,IAAI,CAACa,UAAU,EAAE;MACb4B,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC,EAAE,CAAC5B,UAAU,CAAC,CAAC;;EAEhB;EACA;EACA,MAAM2C,SAAS,GAAGvD,8CAAO,CACrB,OAAO;IAAE+B,GAAG;IAAEM;EAAc,CAAC,CAAC,EAC9B,CAACN,GAAG,EAAEM,aAAa,CACvB,CAAC;EAED,MAAMa,eAAe,GAAGA,CAACM,MAAc,EAAEC,KAAK,GAAG,IAAI,KAAK;IACtD,IAAIA,KAAK,IAAIzB,GAAG,KAAKd,SAAS,EAAE;MAC5BP,aAAa,CAAC;QAAEqB,GAAG,EAAEwB;MAAO,CAAC,CAAC;MAC9B;IACJ;IAEA,IAAIC,KAAK,IAAIzB,GAAG,EAAE0B,QAAQ,CAACF,MAAM,CAAC,EAAE;MAChC;IACJ;IAEA,IAAIC,KAAK,EAAE;MACP9C,aAAa,CAAC;QAAEqB,GAAG,EAAEA,GAAG,GAAI,IAAGwB,MAAO;MAAE,CAAC,CAAC;MAC1C;IACJ;IAEA,IAAIxB,GAAG,EAAE0B,QAAQ,CAACF,MAAM,CAAC,EAAE;MACvB7C,aAAa,CAAC;QAAEqB,GAAG,EAAEA,GAAG,CAAC2B,OAAO,CAACH,MAAM,EAAE,EAAE,CAAC,CAAC9F,IAAI,CAAC;MAAE,CAAC,CAAC;MACtD;IACJ;EACJ,CAAC;EAED,OACIyD,iEAAA,CAAAyC,wDAAA,QACIzC,iEAAA;IAAA,GACQwB,UAAU;IACdC,SAAS,EAAEnE,iDAAU,CAACkE,UAAU,CAACC,SAAS,EAAE;MACxC,CAAE,2CAA0C3B,KAAM,EAAC,GAAGA,KAAK;MAC3D,CAAE,sBAAqB,GAAG0B,UAAU,CAACE,KAAK,CAACgB,QAAQ;MACnD,CAAE,eAAcjC,KAAM,EAAC,GAAGA;IAC9B,CAAC,CAAE;IACHE,EAAE,EAAEA;EAAG,GAEPX,iEAAA,CAAC7B,6DAAQA;EACL;EAAA;IACA4C,GAAG,EAAEC,WAAY;IACjBS,SAAS,EAAEnE,iDAAU,CACjB,uBAAuB,EACvB,mBAAmB,EACnB6D,WAAW,CAACM,SAAS,EACrB;MACI,CAAE,kBAAiBf,SAAU,EAAC,GAAGA;IACrC,CACJ,CAAE;IACF,cAAW,aAAa;IACxBiC,WAAW,EAAC,gBAAW;IACvBzF,KAAK,EAAEsD,IAAK;IACZoC,cAAc,EAAE,CAAC,WAAW,EAAE,aAAa,CAAE;IAC7CC,QAAQ,EAAG3F,KAAa,IACpBsC,aAAa,CAAC;MACVgB,IAAI,EAAEtD,KAAK,CAACsF,OAAO,CAAC,cAAc,EAAE,EAAE;IAC1C,CAAC;IAEL;IAAA;IACAM,4BAA4B;IAC5BC,UAAU,EAAC,MAAM;IACjBrB,KAAK,EAAE;MAAE,GAAGP,WAAW,CAACO;IAAM;EAAE,CACnC,CACA,CAAC,EAEN1B,iEAAA,CAACtB,kEAAa;IAACsE,KAAK,EAAC;EAAO,GACxBhD,iEAAA,CAACrB,0EAAqB;IAClBzB,KAAK,EAAEuD,KAAM;IACboC,QAAQ,EAAElB,gBAAiB;IAC3BsB,QAAQ,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO;EAAE,CACzC,CAAC,EACFjD,iEAAA,CAAC9B,qEAAgB;IACbhB,KAAK,EAAEwD,SAAU;IACjBmC,QAAQ,EAAGK,SAAiB,IAAK;MAC7B1D,aAAa,CAAC;QAAEkB,SAAS,EAAEwC;MAAU,CAAC,CAAC;IAC3C;EAAE,CACL,CAAC,EACFlD,iEAAA,CAACjC,gEAAa;IACVoF,IAAI,EAAElC,QAAQ,GAAGhC,yDAAO,GAAGD,yDAAK;IAChCiB,KAAK,EAAEgB,QAAQ,GAAG,QAAQ,GAAG,MAAO;IACpCV,OAAO,EAAEU,QAAQ,GAAGkB,MAAM,GAAGH,YAAa;IAC1CoB,QAAQ,EAAEnC;EAAS,CACtB,CAAC,EACDxB,UAAU,KAAK2B,YAAY,IAAIH,QAAQ,CAAC,IACrCjB,iEAAA,CAACnC,0DAAO;IACJwF,SAAS,EAAC,QAAQ;IAClBC,OAAO,EAAEA,CAAA,KAAM;MACXjC,eAAe,CAAC,KAAK,CAAC;MACtBL,WAAW,CAACuC,OAAO,EAAEC,KAAK,CAAC,CAAC;IAChC,CAAE;IACFC,MAAM,EAAEnC,aAAc;IACtBoC,YAAY,EAAEtC,YAAY,GAAG,cAAc,GAAG,KAAM;IACpDuC,kBAAkB,EAAE,8BAA+B;IACnDC,KAAK;EAAA,GAEL5D,iEAAA,CAACvB,8EAAW;IACRvB,KAAK,EAAEkF,SAAU;IACjBS,QAAQ,EAAEA,CAAC;MACPjC,GAAG,EAAEiD,MAAM,GAAG,EAAE;MAChB3C,aAAa,EAAE4C;IAInB,CAAC,KAAK;MACFtE,aAAa,CAAC;QAAEoB,GAAG,EAAEpD,2DAAW,CAACqG,MAAM;MAAE,CAAC,CAAC;MAE3C,IAAI3C,aAAa,KAAK4C,gBAAgB,EAAE;QACpCjC,oBAAoB,CAACiC,gBAAgB,CAAC;MAC1C;IACJ,CAAE;IACFC,QAAQ,EAAEA,CAAA,KAAM;MACZ5B,MAAM,CAAC,CAAC;MACRnB,WAAW,CAACuC,OAAO,EAAEC,KAAK,CAAC,CAAC;IAChC,CAAE;IACFQ,kBAAkB,EAAE5C;EAAa,CACpC,CACI,CAEF,CAAC,EAEhBpB,iEAAA,CAAC3B,sEAAiB;IAAC2E,KAAK,EAAC;EAAO,GAC5BhD,iEAAA,CAACd,uDAAa;IACV+E,OAAO,EAAC,WAAW;IACnBC,KAAK,EAAE9E,oDAAE,CAAC,MAAM,EAAE,WAAW;EAAE,CAClC,CAAC,EACFY,iEAAA,CAACd,uDAAa;IACV+E,OAAO,EAAC,gBAAgB;IACxBC,KAAK,EAAE9E,oDAAE,CAAC,YAAY,EAAE,WAAW;EAAE,CACxC,CAAC,EACFY,iEAAA,CAACb,mEAAyB;IACtB+E,KAAK,EAAE9E,oDAAE,CAAC,kBAAkB,EAAE,WAAW,CAAE;IAC3C+E,iBAAiB,EAAC,iBAAiB;IACnCC,eAAe,EAAC;EAAoB,CACvC,CAAC,EACFpE,iEAAA,CAACb,mEAAyB;IACtB+E,KAAK,EAAE9E,oDAAE,CAAC,wBAAwB,EAAE,WAAW,CAAE;IACjD+E,iBAAiB,EAAC,sBAAsB;IACxCC,eAAe,EAAC;EAAyB,CAC5C,CACc,CAAC,EACpBpE,iEAAA,CAAC3B,sEAAiB,QACd2B,iEAAA,CAACN,UAAU;IACPC,aAAa,EAAEG,KAAM;IACrBN,aAAa,EAAEA;EAAc,CAChC,CACc,CAAC,EAEpBQ,iEAAA,CAAC3B,sEAAiB;IAAC2E,KAAK,EAAC;EAAU,GAC/BhD,iEAAA,CAAClC,8DAAW;IACRoG,KAAK,EAAC,SAAS;IACfrB,QAAQ,EAAG3F,KAAa,IAAK;MACzBsC,aAAa,CAAC;QAAEmB,EAAE,EAAEzD;MAAM,CAAC,CAAC;IAChC,CAAE;IACFA,KAAK,EAAEyD;EAAG,CACb,CACc,CAAC,EACnBM,QAAQ,IACLjB,iEAAA,CAAC3B,sEAAiB,QACd2B,iEAAA,CAACpC,4DAAS;IAACqC,KAAK,EAAC;EAAU,GACtBZ,OAAO,CAACa,GAAG,CAAEmC,MAAM,IAChBrC,iEAAA,CAAAyC,wDAAA,QACIzC,iEAAA,CAAChC,kEAAe;IACZ6E,QAAQ,EAAGwB,GAAG,IACVtC,eAAe,CAACM,MAAM,EAAEgC,GAAG,CAC9B;IACDH,KAAK,EAAE7B,MAAO;IACdiC,OAAO,EAAEzD,GAAG,EAAE0B,QAAQ,CAACF,MAAM;EAAE,CAClC,CACH,CACL,CACM,CACI,CAEzB,CAAC;AAEX;AAEA9E,oEAAiB,CAACU,6CAAa,EAAE;EAC7BgC,KAAK,EAAEhC,8CAAc;EACrBuG,QAAQ,EAAEvG,iDAAiB;EAC3BvB,UAAU,EAAE;IACR8D,IAAI,EAAE;MACFiE,IAAI,EAAE;IACV,CAAC;IACDhE,KAAK,EAAE;MACHgE,IAAI,EAAE;IACV,CAAC;IACD3E,KAAK,EAAE;MACH2E,IAAI,EAAE;IACV,CAAC;IACDzH,kBAAkB,EAAE;MAChByH,IAAI,EAAE;IACV,CAAC;IACD5H,uBAAuB,EAAE;MACrB4H,IAAI,EAAE;IACV,CAAC;IACD3H,eAAe,EAAE;MACb2H,IAAI,EAAE;IACV,CAAC;IACD1H,SAAS,EAAE;MACP0H,IAAI,EAAE;IACV,CAAC;IACD9H,oBAAoB,EAAE;MAClB8H,IAAI,EAAE;IACV,CAAC;IACD7H,cAAc,EAAE;MACZ6H,IAAI,EAAE;IACV,CAAC;IACD/D,SAAS,EAAE;MACP+D,IAAI,EAAE;IACV,CAAC;IACD9D,EAAE,EAAE;MACA8D,IAAI,EAAE;IACV,CAAC;IACD7D,GAAG,EAAE;MACD6D,IAAI,EAAE;IACV,CAAC;IACD3D,UAAU,EAAE;MACR2D,IAAI,EAAE;IACV,CAAC;IACD5D,GAAG,EAAE;MACD4D,IAAI,EAAE;IACV;EACJ,CAAC;EACDC,OAAO,EAAE,CAAC,CAAC;EACXnF;AACJ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1XF;AACA;AACA;AACA;AACiC;AAOA;AACwB;AAK1B;AAIxB,SAAS8F,iBAAiBA,CAACnI,KAAsB,EAAE;EACtD,MAAMoI,YAAY,GAAG,OAAOpI,KAAK,KAAK,QAAQ;EAC9C,MAAMqI,oBAAoB,GAAG;IACzBC,OAAO,EAAEtI,KAAK;IACduI,QAAQ,EAAEvI,KAAK;IACfwI,UAAU,EAAExI,KAAK;IACjByI,WAAW,EAAEzI;EACjB,CAAC;EACD,OAAOoI,YAAY,GAAGC,oBAAoB,GAAGrI,KAAK;AACtD;AAEA,SAAS0I,aAAaA,CAAC;EACnBC,WAAW;EACXC,aAAa;EACbC,iBAAiB;EACjBC,mBAAmB;EACnBC,UAAU,GAAG,IAAI;EACjBC,gBAAgB,GAAG,IAAI;EACvBC,iBAAiB,GAAG,KAAK;EACzBC,uBAAuB,GAAG;AACN,CAAC,EAAE;EACvB,MAAM;IAAEC;EAAS,CAAC,GAAG1B,4EAAmB,CAAC,CAAC;EAC1C;EACA,MAAMjI,UAAU,GAAGoI,0DAAS;EACxB;EACCwB,MAAM,IAAKA,MAAM,CAAC,mBAAmB,CAAC,CAACC,gBAAgB,CAAC,CAAC,CAAC7J,UAC/D,CAAC;EACD,MAAM;IAAE8J;EAAsB,CAAC,GAAGzB,4DAAW,CAAC,mBAAmB,CAAC;EAClE,MAAMvF,aAAa,GAAIiH,aAAqB,IAAK;IAC7CD,qBAAqB,CAACH,QAAQ,EAAEI,aAAa,CAAC;EAClD,CAAC;EACD;EACA,MAAM;IAAEC;EAAc,CAAC,GAAG5B,0DAAS,CAAEwB,MAAM,IAAK;IAC5C,OAAO;MACHI,aAAa;MACT;MACAJ,MAAM,CAAC,mBAAmB,CAAC,EAAEK,WAAW,CAAC,CAAC,EACpCC,sBAAsB,EAAEC,KAAK,EAAEC,OAAO,EAAEC;IACtD,CAAC;EACL,CAAC,CAAC;EACF,OACI/G,iEAAA,CAAAyC,wDAAA,QACKwD,UAAU,IACPjG,iEAAA,CAACkF,+EAAc;IACX8B,OAAO,EAAEX,QAAS;IAClBY,gBAAgB,EAAEd,iBAAkB;IACpCe,cAAc,EAAEA,CAAA,KACZ1H,aAAa,CAAC;MACV,CAACsG,aAAa,GAAG,CAAC;IACtB,CAAC,CACJ;IACDqB,QAAQ,EAAEA,CAAA,KAAM,CAAC3K,+CAAO,CAACE,UAAU,CAACoJ,aAAa,CAAC,CAAE;IACpD5B,KAAK,EAAE2B,WAAY;IACnBuB,UAAU,EAAEA,CAAA,KAAM;MACd5H,aAAa,CAAC;QAAE,CAACsG,aAAa,GAAG,CAAC;MAAE,CAAC,CAAC;IAC1C;EAAE,GAEF9F,iEAAA,CAACoF,iFAAgB;IACbiC,WAAW;IACXC,IAAI,EAAE,kBAAmB;IACzBC,MAAM,EAAEb,aAAc;IACtBxC,KAAK,EAAE2B,WAAY;IACnBhD,QAAQ,EAAG2E,SAAS,IAAK;MACrBhI,aAAa,CAAC;QAAE,CAACsG,aAAa,GAAG0B;MAAU,CAAC,CAAC;IACjD,CAAE;IACFtK,KAAK,EAAER,UAAU,CAACoJ,aAAa;EAAE,CACpC,CACW,CACnB,EAEAI,gBAAgB,IACblG,iEAAA,CAACkF,+EAAc;IACX8B,OAAO,EAAEX,QAAS;IAClBY,gBAAgB,EAAEb,uBAAwB;IAC1Cc,cAAc,EAAEA,CAAA,KACZ1H,aAAa,CAAC;MACV,CAACwG,mBAAmB,GAAG,CAAC;IAC5B,CAAC,CACJ;IACD9B,KAAK,EAAE6B,iBAAkB;IACzBoB,QAAQ,EAAEA,CAAA,KAAM,CAAC3K,+CAAO,CAACE,UAAU,CAACsJ,mBAAmB,CAAC,CAAE;IAC1DoB,UAAU,EAAEA,CAAA,KAAM;MACd5H,aAAa,CAAC;QAAE,CAACwG,mBAAmB,GAAG,CAAC;MAAE,CAAC,CAAC;IAChD;EAAE,GAEFhG,iEAAA,CAACgF,8DAAW,CAACyC,WAAW;IAACC,EAAE,EAAC;EAAQ,GAC/B3B,iBACoB,CAAC,EAC1B/F,iEAAA;IAAKyB,SAAS,EAAC;EAAwC,GACnDzB,iEAAA,CAAC6E,sFAAmB;IAChB8C,MAAM,EAAEjL,UAAU,CAACsJ,mBAAmB,CAAE;IACxCnD,QAAQ,EAAG+E,eAAoB,IAAK;MAChC,MAAMC,QAAQ,GACVxC,iBAAiB,CAACuC,eAAe,CAAC;MAEtCpI,aAAa,CAAC;QACV,CAACwG,mBAAmB,GAAG6B;MAC3B,CAAC,CAAC;IACN;EAAE,CACL,CACA,CACO,CAEtB,CAAC;AAEX;AAEA,iEAAejC,aAAa;;;;;;;;;;;;;;;;;;;;;;;;AChI5B;AACA;AACA;;AAEyD;AACpB;AAQJ;AAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASsC,wBAAwBA,CAAC;EAC9B/D,iBAAiB;EACjBC,eAAe;EACfF;AACgC,CAAC,EAAE;EACnC,MAAM;IAAEmC;EAAS,CAAC,GAAG1B,4EAAmB,CAAC,CAAC;EAC1C,MAAM;IAAE6B;EAAsB,CAAC,GAAGzB,4DAAW,CAAC,mBAAmB,CAAC;;EAElE;EACA,MAAMrI,UAAU,GAAGoI,0DAAS,CAAEwB,MAAM,IAAK;IACrC;IACA,OAAOA,MAAM,CAAC,mBAAmB,CAAC,CAAC6B,kBAAkB,CAAC9B,QAAQ,CAAC;EACnE,CAAC,CAAC;EACF;EACA,MAAM7G,aAAa,GAAIiH,aAAa,IAChCD,qBAAqB,CAACH,QAAQ,EAAEI,aAAa,CAAC;EAClD,MAAM2B,qBAAqB,GAAGH,0GAAmC,CAAC,CAAC;EACnE;EACA,MAAM;IAAEvB,aAAa;IAAE2B;EAAiB,CAAC,GAAGvD,0DAAS,CAAEwB,MAAM,IAAK;IAC9D,OAAO;MACHI,aAAa;MACT;MACAJ,MAAM,CAAC,mBAAmB,CAAC,EAAEK,WAAW,CAAC,CAAC,EACpCC,sBAAsB,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO;MAEzDsB,gBAAgB;MACZ;MACA/B,MAAM,CAAC,mBAAmB,CAAC,EAAEK,WAAW,CAAC,CAAC,EACpCC,sBAAsB,EAAEC,KAAK,EAAEyB,SAAS,EAAEvB;IACxD,CAAC;EACL,CAAC,CAAC;EAEF,OACI/G,iEAAA,CAAC+H,gGAA6B;IAAA,GACtBK,qBAAqB;IACzBf,WAAW;IACXL,OAAO,EAAEX,QAAS;IAClBpG,KAAK,EAAEb,mDAAE,CAAC,gBAAgB,EAAE,mBAAmB,CAAE;IACjDmJ,YAAY,EAAE;MACVlF,SAAS,EAAE;IACf,CAAE;IACFmF,QAAQ,EAAE,CACN;MACIC,SAAS,EAAE,IAAI;MACfvB,cAAc,EAAEA,CAAA,KACZ1H,aAAa,CAAC;QACV,CAAC2E,iBAAiB,GAAG,IAAI;QACzB,CAACC,eAAe,GAAG;MACvB,CAAC,CAAC;MACNsE,UAAU,EAAEhM,UAAU,CAACyH,iBAAiB,CAAC;MACzCwE,aAAa,EAAEjM,UAAU,CAAC0H,eAAe,CAAC;MAC1CmD,MAAM,EAAEb,aAAa;MACrB4B,SAAS,EAAED,gBAAgB;MAC3BnE,KAAK,EAAEA,KAAK;MACZ0E,aAAa,EAAGhH,QAAuB,IACnCpC,aAAa,CAAC;QACV,CAAC2E,iBAAiB,GAAGvC;MACzB,CAAC,CAAC;MACNiH,gBAAgB,EAAGjH,QAAuB,IACtCpC,aAAa,CAAC;QACV,CAAC4E,eAAe,GAAGxC;MACvB,CAAC;IACT,CAAC;EACH,CACL,CAAC;AAEV;AAEA,iEAAesG,wBAAwB;;;;;;;;;;;;;;;;;;;;;;;;AC5FvC;AACA;AACA;;AAEyD;AACpB;AAQJ;AAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASY,YAAYA,CAAC;EAAE7E,OAAO;EAAEC;AAA8B,CAAC,EAAE;EAC9D,MAAM;IAAEmC;EAAS,CAAC,GAAG1B,4EAAmB,CAAC,CAAC;EAC1C,MAAM;IAAE6B;EAAsB,CAAC,GAAGzB,4DAAW,CAAC,mBAAmB,CAAC;;EAElE;EACA,MAAMrI,UAAU,GAAGoI,0DAAS,CAAEwB,MAAM,IAAK;IACrC;IACA,OAAOA,MAAM,CAAC,mBAAmB,CAAC,CAAC6B,kBAAkB,CAAC9B,QAAQ,CAAC;EACnE,CAAC,CAAC;EAEF,MAAM7G,aAAa,GAAIiH,aAAqB,IACxCD,qBAAqB,CAACH,QAAQ,EAAEI,aAAa,CAAC;EAClD,MAAM2B,qBAAqB,GAAGH,0GAAmC,CAAC,CAAC;EACnE;EACA,MAAM;IAAEvB;EAAc,CAAC,GAAG5B,0DAAS,CAAEwB,MAAM,IAAK;IAC5C,OAAO;MACHI,aAAa;MACT;MACAJ,MAAM,CAAC,mBAAmB,CAAC,EAAEK,WAAW,CAAC,CAAC,EACpCC,sBAAsB,EAAEC,KAAK,EAAEC,OAAO,EAAEC;IACtD,CAAC;EACL,CAAC,CAAC;EAEF,OACI/G,iEAAA,CAAC+H,gGAA6B;IAAA,GACtBK,qBAAqB;IACzBf,WAAW;IACXL,OAAO,EAAEX,QAAS;IAClBpG,KAAK,EAAEb,mDAAE,CAAC,gBAAgB,EAAE,mBAAmB,CAAE;IACjDmJ,YAAY,EAAE;MACVlF,SAAS,EAAE;IACf,CAAE;IACFmF,QAAQ,EAAE,CACN;MACIC,SAAS,EAAE,IAAI;MACfvB,cAAc,EAAEA,CAAA,KACZ1H,aAAa,CAAC;QACV,CAACyE,OAAO,GAAG;MACf,CAAC,CAAC;MACNyE,UAAU,EAAEhM,UAAU,CAACuH,OAAO,CAAC;MAC/BsD,MAAM,EAAEb,aAAa;MACrBxC,KAAK,EAAEA,KAAK;MACZ0E,aAAa,EAAGhH,QAAuB,IACnCpC,aAAa,CAAC;QAAE,CAACyE,OAAO,GAAGrC;MAAS,CAAC;IAC7C,CAAC;EACH,CACL,CAAC;AAEV;AAEA,iEAAekH,YAAY;;;;;;;;;;;;;;;;;;;;;;;;ACzEiC;AACiB;AACf;AACa;;;;;;;;;;;;;;;;;;;;;;;;;;;ACH3E;AACA;AACA;AACA;AACiC;AAOA;AACwB;AAC8B;AAGvF,SAASE,cAAcA,CAAC;EACpB9E,KAAK;EACLD,OAAO;EACPkF,aAAa,GAAG;AACF,CAAC,EAAE;EACjB,MAAM;IAAE9C;EAAS,CAAC,GAAG1B,4EAAmB,CAAC,CAAC;;EAE1C;EACA,MAAMjI,UAAU,GAAGoI,0DAAS,CACvBwB,MAAM;EACH;EACAA,MAAM,CAAC,mBAAmB,CAAC,CAACC,gBAAgB,CAAC,CAAC,CAAC7J,UACvD,CAAC;EACD,MAAM;IAAE8J;EAAsB,CAAC,GAAGzB,4DAAW,CAAC,mBAAmB,CAAC;EAElE,MAAMvF,aAAa,GAAIiH,aAAqB,IAAK;IAC7CD,qBAAqB,CAACH,QAAQ,EAAEI,aAAa,CAAC;EAClD,CAAC;EACD,OACIzG,iEAAA,CAAAyC,wDAAA,QACIzC,iEAAA,CAACkF,+EAAc;IACX8B,OAAO,EAAEX,QAAS;IAClBY,gBAAgB,EAAEkC,aAAc;IAChCjC,cAAc,EAAEA,CAAA,KAAM;MAClB1H,aAAa,CAAC;QACV,CAACyE,OAAO,GAAG,CAAC;MAChB,CAAC,CAAC;IACN,CAAE;IACFxC,SAAS,EAAE,0BAA2B;IACtCyC,KAAK,EAAEA,KAAM;IACbkD,UAAU,EAAEA,CAAA,KAAM5H,aAAa,CAAC;MAAE,CAACyE,OAAO,GAAG,CAAC;IAAE,CAAC,CAAE;IACnDkD,QAAQ,EAAEA,CAAA,KAAM,CAAC3K,+CAAO,CAACE,UAAU,CAACuH,OAAO,CAAC;EAAE,GAE9CjE,iEAAA,CAACkJ,sFAAmB;IAChBE,UAAU,EAAE,IAAK;IACjBlF,KAAK,EAAEA,KAAM;IACbyD,MAAM,EAAEjL,UAAU,CAACuH,OAAO,CAAE;IAC5BoF,KAAK,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAE;IAC1CxG,QAAQ,EAAGjB,QAAa,IAAK;MACzBpC,aAAa,CAAC;QACV,CAACyE,OAAO,GAAGrC;MACf,CAAC,CAAC;IACN;EAAE,CACL,CACW,CAClB,CAAC;AAEX;AAEA,iEAAeoH,cAAc;;;;;;;;;;;;;;;;;;;;;;;;ACjE7B;AACA;AACA;AACyD;AACzD;AAC8D;AAK/B;AAG/B,SAASD,wBAAwBA,CAAC;EAC9B7E,KAAK;EACL0F,OAAO;EACPC,YAAY;EACZC,OAAO,GAAG,KAAK;EACfC,eAAe,GAAG,KAAK;EACvBC,cAAc,GAAG;AACQ,CAAC,EAAE;EAC5B,MAAM;IAAE3D;EAAS,CAAC,GAAG1B,4EAAmB,CAAC,CAAC;EAC1C,MAAM;IAAE6B;EAAsB,CAAC,GAAGzB,4DAAW,CAAC,mBAAmB,CAAC;;EAElE;EACA,MAAMrI,UAAU,GAAGoI,0DAAS,CAAEwB,MAAM,IAAK;IACrC;IACA,OAAOA,MAAM,CAAC,mBAAmB,CAAC,CAAC6B,kBAAkB,CAAC9B,QAAQ,CAAC;EACnE,CAAC,CAAC;EACF,MAAM7G,aAAa,GAAIiH,aAAqB,IACxCD,qBAAqB,CAACH,QAAQ,EAAEI,aAAa,CAAC;EAElD,OACIzG,iEAAA,CAACuJ,mFAAkB;IACfrF,KAAK,EAAEA,KAAM;IACb4F,OAAO,EAAEA,OAAQ;IACjBE,cAAc,EAAEA,cAAe;IAC/BD,eAAe,EAAEA,eAAgB;IACjCE,uBAAuB;IACvB/M,KAAK,EAAER,UAAU,CAACmN,YAAY,CAAE;IAChChH,QAAQ,EAAGjB,QAAQ,IAAK;MACpBpC,aAAa,CAAC;QACV,CAACqK,YAAY,GAAGjI;MACpB,CAAC,CAAC;IACN;EAAE,GAEDgI,OAAO,CAAC1J,GAAG,CAAC,CAAC;IAAEhD,KAAK;IAAEiG,IAAI,GAAG,IAAI;IAAEe;EAAM,CAAC,KAAK;IAC5C,OAAOf,IAAI,GACPnD,iEAAA,CAACyJ,6FAA4B;MACzBrJ,GAAG,EAAElD,KAAM;MACXA,KAAK,EAAEA,KAAM;MACbiG,IAAI,EAAEA,IAAK;MACXe,KAAK,EAAEA;IAAM,CAChB,CAAC,GAEFlE,iEAAA,CAAC2J,yFAAwB;MACrBvJ,GAAG,EAAElD,KAAM;MACXA,KAAK,EAAEA,KAAM;MACbgH,KAAK,EAAEA;IAAM,CAChB,CACJ;EACL,CAAC,CACe,CAAC;AAE7B;AAEA,iEAAe6E,wBAAwB;;;;;;;;;;AClEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB;AAChB;;AAEA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK,KAA6B;AAClC;AACA;AACA,GAAG,SAAS,IAA4E;AACxF;AACA,EAAE,iCAAqB,EAAE,mCAAE;AAC3B;AACA,GAAG;AAAA,kGAAC;AACJ,GAAG,KAAK,EAEN;AACF,CAAC;;;;;;;;;;;;;AC3DD;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://tableberg/./node_modules/.pnpm/@wordpress+icons@9.28.0/node_modules/@wordpress/icons/build-module/library/link-off.js","webpack://tableberg/./node_modules/.pnpm/@wordpress+icons@9.28.0/node_modules/@wordpress/icons/build-module/library/link.js","webpack://tableberg/./src/button/get-classes.ts","webpack://tableberg/./src/button/get-styles.ts","webpack://tableberg/./src/button/index.tsx","webpack://tableberg/./src/components/border-control/index.tsx","webpack://tableberg/./src/components/color-settings/color-settings-with-gradient.tsx","webpack://tableberg/./src/components/color-settings/color-settings.tsx","webpack://tableberg/./src/components/index.tsx","webpack://tableberg/./src/components/spacing-control/index.tsx","webpack://tableberg/./src/components/toggle-group-control/index.tsx","webpack://tableberg/./node_modules/.pnpm/classnames@2.3.2/node_modules/classnames/index.js","webpack://tableberg/./src/button/style.scss","webpack://tableberg/external window \"React\"","webpack://tableberg/external window \"lodash\"","webpack://tableberg/external window [\"wp\",\"blockEditor\"]","webpack://tableberg/external window [\"wp\",\"blocks\"]","webpack://tableberg/external window [\"wp\",\"components\"]","webpack://tableberg/external window [\"wp\",\"compose\"]","webpack://tableberg/external window [\"wp\",\"data\"]","webpack://tableberg/external window [\"wp\",\"element\"]","webpack://tableberg/external window [\"wp\",\"i18n\"]","webpack://tableberg/external window [\"wp\",\"primitives\"]","webpack://tableberg/external window [\"wp\",\"url\"]","webpack://tableberg/webpack/bootstrap","webpack://tableberg/webpack/runtime/chunk loaded","webpack://tableberg/webpack/runtime/compat get default export","webpack://tableberg/webpack/runtime/define property getters","webpack://tableberg/webpack/runtime/hasOwnProperty shorthand","webpack://tableberg/webpack/runtime/make namespace object","webpack://tableberg/webpack/runtime/jsonp chunk loading","webpack://tableberg/webpack/before-startup","webpack://tableberg/webpack/startup","webpack://tableberg/webpack/after-startup"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst linkOff = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M17.031 4.703 15.576 4l-1.56 3H14v.03l-2.324 4.47H9.5V13h1.396l-1.502 2.889h-.95a3.694 3.694 0 0 1 0-7.389H10V7H8.444a5.194 5.194 0 1 0 0 10.389h.17L7.5 19.53l1.416.719L15.049 8.5h.507a3.694 3.694 0 0 1 0 7.39H14v1.5h1.556a5.194 5.194 0 0 0 .273-10.383l1.202-2.304Z\"\n}));\nexport default linkOff;\n//# sourceMappingURL=link-off.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst link = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M10 17.389H8.444A5.194 5.194 0 1 1 8.444 7H10v1.5H8.444a3.694 3.694 0 0 0 0 7.389H10v1.5ZM14 7h1.556a5.194 5.194 0 0 1 0 10.39H14v-1.5h1.556a3.694 3.694 0 0 0 0-7.39H14V7Zm-4.5 6h5v-1.5h-5V13Z\"\n}));\nexport default link;\n//# sourceMappingURL=link.js.map","//@ts-ignore\r\nimport { isUndefined, trim, isEmpty } from \"lodash\";\r\nimport { ButtonBlockTypes } from \"./type\";\r\n\r\nexport function getStyleClass(attributes: ButtonBlockTypes) {\r\n    const {\r\n        backgroundHoverColor,\r\n        textHoverColor,\r\n        backgroundHoverGradient,\r\n        backgroundColor,\r\n        textColor,\r\n        backgroundGradient,\r\n    } = attributes;\r\n    const isValueEmpty = (value: any) => {\r\n        return (\r\n            isUndefined(value) ||\r\n            value === false ||\r\n            trim(value) === \"\" ||\r\n            trim(value) === \"undefined undefined undefined\" ||\r\n            isEmpty(value)\r\n        );\r\n    };\r\n\r\n    return {\r\n        \"has-background-color\":\r\n            !isValueEmpty(backgroundColor) || !isValueEmpty(backgroundGradient),\r\n        \"has-hover-background-color\":\r\n            !isValueEmpty(backgroundHoverColor) ||\r\n            !isValueEmpty(backgroundHoverGradient),\r\n        \"has-hover-text-color\": !isValueEmpty(textHoverColor),\r\n        \"has-text-color\": !isValueEmpty(textColor),\r\n    };\r\n}\r\n","//@ts-ignore\r\nimport { omitBy, isUndefined, trim, isEmpty, isNumber } from \"lodash\";\r\nimport { ButtonBlockTypes } from \"./type\";\r\n\r\nexport function getStyles(attributes: ButtonBlockTypes) {\r\n    const {\r\n        backgroundColor,\r\n        backgroundGradient,\r\n        backgroundHoverColor,\r\n        backgroundHoverGradient,\r\n        textColor,\r\n        textHoverColor,\r\n    } = attributes;\r\n\r\n    let styles = {\r\n        \"--tableberg-button-background-color\": !isEmpty(backgroundColor)\r\n            ? backgroundColor\r\n            : backgroundGradient,\r\n        \"--tableberg-button-text-hover-color\": textHoverColor,\r\n        \"--tableberg-button-text-color\": textColor,\r\n        \"--tableberg-button-hover-background-color\": !isEmpty(\r\n            backgroundHoverColor\r\n        )\r\n            ? backgroundHoverColor\r\n            : backgroundHoverGradient,\r\n    };\r\n\r\n    return omitBy(\r\n        styles,\r\n        (value: any) =>\r\n            value === false ||\r\n            isEmpty(value) ||\r\n            isUndefined(value) ||\r\n            trim(value) === \"\" ||\r\n            trim(value) === \"undefined undefined undefined\"\r\n    );\r\n}\r\n","import classnames from \"classnames\";\r\n\r\nimport {\r\n    BlockEditProps,\r\n    BlockSaveProps,\r\n    registerBlockType,\r\n} from \"@wordpress/blocks\";\r\n// @ts-ignore\r\nimport { prependHTTP } from \"@wordpress/url\";\r\n// @ts-ignore\r\nimport { useMergeRefs } from \"@wordpress/compose\";\r\n\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    PanelBody,\r\n    Popover,\r\n    TextControl,\r\n    ToolbarButton,\r\n    __experimentalToolsPanel as ToolsPanel,\r\n    CheckboxControl,\r\n} from \"@wordpress/components\";\r\n\r\nimport metadata from \"./block.json\";\r\nimport {\r\n    // @ts-ignore\r\n    AlignmentControl,\r\n    RichText,\r\n    useBlockProps,\r\n    InspectorControls,\r\n    // @ts-ignore\r\n    __experimentalColorGradientSettingsDropdown as ColorGradientSettingsDropdown,\r\n    // @ts-ignore\r\n    __experimentalUseMultipleOriginColorsAndGradients as useMultipleOriginColorsAndGradients,\r\n    // @ts-ignore\r\n    __experimentalUseBorderProps as useBorderProps,\r\n    // @ts-ignore\r\n    __experimentalLinkControl as LinkControl,\r\n    BlockControls,\r\n    BlockAlignmentToolbar,\r\n} from \"@wordpress/block-editor\";\r\nimport { MouseEvent, useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nimport \"./style.scss\";\r\nimport { link, linkOff } from \"@wordpress/icons\";\r\nimport { ColorSettings, ColorSettingsWithGradient } from \"../components\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { getStyleClass } from \"./get-classes\";\r\nimport { ButtonBlockTypes } from \"./type\";\r\nimport { getStyles } from \"./get-styles\";\r\n\r\nconst ALL_REL = [\"sponsored\", \"nofollow\", \"noreferrer\", \"noopener\"];\r\nconst NEW_TAB_REL = \"noreferrer noopener\";\r\n\r\nfunction edit({\r\n    attributes,\r\n    setAttributes,\r\n    isSelected,\r\n}: BlockEditProps<ButtonBlockTypes>) {\r\n    function WidthPanel({\r\n        selectedWidth,\r\n        setAttributes,\r\n    }: {\r\n        selectedWidth: number | undefined;\r\n        setAttributes: (attrs: Partial<ButtonBlockTypes>) => void;\r\n    }) {\r\n        function handleChange(newWidth: number) {\r\n            // Check if we are toggling the width off\r\n            const width = selectedWidth === newWidth ? undefined : newWidth;\r\n\r\n            // Update attributes.\r\n            setAttributes({ width });\r\n        }\r\n\r\n        return (\r\n            <PanelBody title={\"Width settings\"}>\r\n                <ButtonGroup aria-label={\"Button width\"}>\r\n                    {[25, 50, 75, 100].map((widthValue) => {\r\n                        return (\r\n                            <Button\r\n                                key={widthValue}\r\n                                isSmall\r\n                                variant={\r\n                                    widthValue === selectedWidth\r\n                                        ? \"primary\"\r\n                                        : undefined\r\n                                }\r\n                                onClick={() => handleChange(widthValue)}\r\n                            >\r\n                                {widthValue}%\r\n                            </Button>\r\n                        );\r\n                    })}\r\n                </ButtonGroup>\r\n            </PanelBody>\r\n        );\r\n    }\r\n\r\n    const { text, align, width, textAlign, id, url, rel, linkTarget } =\r\n        attributes;\r\n    const ref = useRef();\r\n    const richTextRef = useRef<HTMLDivElement>();\r\n    const isURLSet = !!url;\r\n    const opensInNewTab = linkTarget === \"_blank\";\r\n    const borderProps = useBorderProps(attributes);\r\n\r\n    const [isEditingURL, setIsEditingURL] = useState(false);\r\n    const [popoverAnchor, setPopoverAnchor] = useState(null);\r\n\r\n    const blockProps = useBlockProps({\r\n        ref: useMergeRefs([setPopoverAnchor, ref]),\r\n        className: getStyleClass(attributes),\r\n        style: getStyles(attributes),\r\n    });\r\n\r\n    const blockAlignChange = (newValue: \"left\" | \"right\" | \"center\") => {\r\n        setAttributes({ align: newValue });\r\n    };\r\n\r\n    const onToggleOpenInNewTab = (value: boolean) => {\r\n        const newLinkTarget = value ? \"_blank\" : undefined;\r\n\r\n        if (newLinkTarget && !rel) {\r\n            handleRelChange(NEW_TAB_REL);\r\n        }\r\n\r\n        setAttributes({\r\n            linkTarget: newLinkTarget,\r\n        });\r\n    };\r\n\r\n    const startEditing = (event: MouseEvent) => {\r\n        event.preventDefault();\r\n        setIsEditingURL(true);\r\n    };\r\n\r\n    const unlink = () => {\r\n        setAttributes({\r\n            url: undefined,\r\n            linkTarget: undefined,\r\n            rel: undefined,\r\n        });\r\n        setIsEditingURL(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isSelected) {\r\n            setIsEditingURL(false);\r\n        }\r\n    }, [isSelected]);\r\n\r\n    // Memoize link value to avoid overriding the LinkControl's internal state.\r\n    // This is a temporary fix. See https://github.com/WordPress/gutenberg/issues/51256.\r\n    const linkValue = useMemo(\r\n        () => ({ url, opensInNewTab }),\r\n        [url, opensInNewTab]\r\n    );\r\n\r\n    const handleRelChange = (relOpt: string, state = true) => {\r\n        if (state && rel === undefined) {\r\n            setAttributes({ rel: relOpt });\r\n            return;\r\n        }\r\n\r\n        if (state && rel?.includes(relOpt)) {\r\n            return;\r\n        }\r\n\r\n        if (state) {\r\n            setAttributes({ rel: rel + ` ${relOpt}` });\r\n            return;\r\n        }\r\n\r\n        if (rel?.includes(relOpt)) {\r\n            setAttributes({ rel: rel.replace(relOpt, \"\").trim() });\r\n            return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                {...blockProps}\r\n                className={classnames(blockProps.className, {\r\n                    [`has-custom-width wp-block-button__width-${width}`]: width,\r\n                    [`has-custom-font-size`]: blockProps.style.fontSize,\r\n                    [`block-align-${align}`]: align,\r\n                })}\r\n                id={id}\r\n            >\r\n                <RichText\r\n                    // @ts-ignore\r\n                    ref={richTextRef}\r\n                    className={classnames(\r\n                        \"wp-block-button__link\",\r\n                        \"wp-element-button\",\r\n                        borderProps.className,\r\n                        {\r\n                            [`has-text-align-${textAlign}`]: textAlign,\r\n                        }\r\n                    )}\r\n                    aria-label=\"Button text\"\r\n                    placeholder=\"Add text…\"\r\n                    value={text}\r\n                    allowedFormats={[\"core/bold\", \"core/italic\"]}\r\n                    onChange={(value: string) =>\r\n                        setAttributes({\r\n                            text: value.replace(/<\\/?a[^>]*>/g, \"\"),\r\n                        })\r\n                    }\r\n                    // @ts-ignore\r\n                    withoutInteractiveFormatting\r\n                    identifier=\"text\"\r\n                    style={{ ...borderProps.style }}\r\n                />\r\n            </div>\r\n            {/* @ts-ignore */}\r\n            <BlockControls group=\"block\">\r\n                <BlockAlignmentToolbar\r\n                    value={align}\r\n                    onChange={blockAlignChange}\r\n                    controls={[\"left\", \"center\", \"right\"]}\r\n                />\r\n                <AlignmentControl\r\n                    value={textAlign}\r\n                    onChange={(nextAlign: string) => {\r\n                        setAttributes({ textAlign: nextAlign });\r\n                    }}\r\n                />\r\n                <ToolbarButton\r\n                    icon={isURLSet ? linkOff : link}\r\n                    title={isURLSet ? \"Unlink\" : \"Link\"}\r\n                    onClick={isURLSet ? unlink : startEditing}\r\n                    isActive={isURLSet}\r\n                />\r\n                {isSelected && (isEditingURL || isURLSet) && (\r\n                    <Popover\r\n                        placement=\"bottom\"\r\n                        onClose={() => {\r\n                            setIsEditingURL(false);\r\n                            richTextRef.current?.focus();\r\n                        }}\r\n                        anchor={popoverAnchor}\r\n                        focusOnMount={isEditingURL ? \"firstElement\" : false}\r\n                        __unstableSlotName={\"__unstable-block-tools-after\"}\r\n                        shift\r\n                    >\r\n                        <LinkControl\r\n                            value={linkValue}\r\n                            onChange={({\r\n                                url: newURL = \"\",\r\n                                opensInNewTab: newOpensInNewTab,\r\n                            }: {\r\n                                url: string;\r\n                                opensInNewTab: boolean;\r\n                            }) => {\r\n                                setAttributes({ url: prependHTTP(newURL) });\r\n\r\n                                if (opensInNewTab !== newOpensInNewTab) {\r\n                                    onToggleOpenInNewTab(newOpensInNewTab);\r\n                                }\r\n                            }}\r\n                            onRemove={() => {\r\n                                unlink();\r\n                                richTextRef.current?.focus();\r\n                            }}\r\n                            forceIsEditingLink={isEditingURL}\r\n                        />\r\n                    </Popover>\r\n                )}\r\n            </BlockControls>\r\n            {/* @ts-ignore */}\r\n            <InspectorControls group=\"color\">\r\n                <ColorSettings\r\n                    attrKey=\"textColor\"\r\n                    label={__(\"Text\", \"tableberg\")}\r\n                />\r\n                <ColorSettings\r\n                    attrKey=\"textHoverColor\"\r\n                    label={__(\"Hover Text\", \"tableberg\")}\r\n                />\r\n                <ColorSettingsWithGradient\r\n                    label={__(\"Background Color\", \"tableberg\")}\r\n                    attrBackgroundKey=\"backgroundColor\"\r\n                    attrGradientKey=\"backgroundGradient\"\r\n                />\r\n                <ColorSettingsWithGradient\r\n                    label={__(\"Hover Background Color\", \"tableberg\")}\r\n                    attrBackgroundKey=\"backgroundHoverColor\"\r\n                    attrGradientKey=\"backgroundHoverGradient\"\r\n                />\r\n            </InspectorControls>\r\n            <InspectorControls>\r\n                <WidthPanel\r\n                    selectedWidth={width}\r\n                    setAttributes={setAttributes}\r\n                />\r\n            </InspectorControls>\r\n            {/* @ts-ignore */}\r\n            <InspectorControls group=\"advanced\">\r\n                <TextControl\r\n                    label=\"HTML ID\"\r\n                    onChange={(value: string) => {\r\n                        setAttributes({ id: value });\r\n                    }}\r\n                    value={id}\r\n                />\r\n            </InspectorControls>\r\n            {isURLSet && (\r\n                <InspectorControls>\r\n                    <PanelBody title=\"Link rel\">\r\n                        {ALL_REL.map((relOpt) => (\r\n                            <>\r\n                                <CheckboxControl\r\n                                    onChange={(val) =>\r\n                                        handleRelChange(relOpt, val)\r\n                                    }\r\n                                    label={relOpt}\r\n                                    checked={rel?.includes(relOpt)}\r\n                                />\r\n                            </>\r\n                        ))}\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nregisterBlockType(metadata.name, {\r\n    title: metadata.title,\r\n    category: metadata.category,\r\n    attributes: {\r\n        text: {\r\n            type: \"string\",\r\n        },\r\n        align: {\r\n            type: \"string\",\r\n        },\r\n        width: {\r\n            type: \"number\",\r\n        },\r\n        backgroundGradient: {\r\n            type: \"string\",\r\n        },\r\n        backgroundHoverGradient: {\r\n            type: \"string\",\r\n        },\r\n        backgroundColor: {\r\n            type: \"string\",\r\n        },\r\n        textColor: {\r\n            type: \"string\",\r\n        },\r\n        backgroundHoverColor: {\r\n            type: \"string\",\r\n        },\r\n        textHoverColor: {\r\n            type: \"string\",\r\n        },\r\n        textAlign: {\r\n            type: \"string\",\r\n        },\r\n        id: {\r\n            type: \"string\",\r\n        },\r\n        url: {\r\n            type: \"string\",\r\n        },\r\n        linkTarget: {\r\n            type: \"string\",\r\n        },\r\n        rel: {\r\n            type: \"string\",\r\n        },\r\n    },\r\n    example: {},\r\n    edit,\r\n});\r\n","/**\r\n * WordPress Dependencies\r\n */\r\n//@ts-ignore\r\nimport { isEmpty } from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport {\r\n    // @ts-ignore\r\n    useBlockEditContext,\r\n    // @ts-ignore\r\n    __experimentalBorderRadiusControl as BorderRadiusControl,\r\n} from \"@wordpress/block-editor\";\r\nimport { useSelect, useDispatch } from \"@wordpress/data\";\r\nimport {\r\n    BaseControl,\r\n    __experimentalToolsPanelItem as ToolsPanelItem,\r\n    __experimentalBorderBoxControl as BorderBoxControl,\r\n} from \"@wordpress/components\";\r\n\r\nimport type { BorderControlPropTypes } from \"../types\";\r\n\r\nexport function splitBorderRadius(value: string | object) {\r\n    const isValueMixed = typeof value === \"string\";\r\n    const splittedBorderRadius = {\r\n        topLeft: value,\r\n        topRight: value,\r\n        bottomLeft: value,\r\n        bottomRight: value,\r\n    };\r\n    return isValueMixed ? splittedBorderRadius : value;\r\n}\r\n\r\nfunction BorderControl({\r\n    borderLabel,\r\n    attrBorderKey,\r\n    borderRadiusLabel,\r\n    attrBorderRadiusKey,\r\n    showBorder = true,\r\n    showBorderRadius = true,\r\n    showDefaultBorder = false,\r\n    showDefaultBorderRadius = false,\r\n}: BorderControlPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n    // @ts-ignore\r\n    const attributes = useSelect(\r\n        // @ts-ignore\r\n        (select) => select(\"core/block-editor\").getSelectedBlock().attributes\r\n    );\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n    const setAttributes = (newAttributes: object) => {\r\n        updateBlockAttributes(clientId, newAttributes);\r\n    };\r\n    // @ts-ignore\r\n    const { defaultColors } = useSelect((select) => {\r\n        return {\r\n            defaultColors:\r\n                // @ts-ignore\r\n                select(\"core/block-editor\")?.getSettings()\r\n                    ?.__experimentalFeatures?.color?.palette?.default,\r\n        };\r\n    });\r\n    return (\r\n        <>\r\n            {showBorder && (\r\n                <ToolsPanelItem\r\n                    panelId={clientId}\r\n                    isShownByDefault={showDefaultBorder}\r\n                    resetAllFilter={() =>\r\n                        setAttributes({\r\n                            [attrBorderKey]: {},\r\n                        })\r\n                    }\r\n                    hasValue={() => !isEmpty(attributes[attrBorderKey])}\r\n                    label={borderLabel}\r\n                    onDeselect={() => {\r\n                        setAttributes({ [attrBorderKey]: {} });\r\n                    }}\r\n                >\r\n                    <BorderBoxControl\r\n                        enableAlpha\r\n                        size={\"__unstable-large\"}\r\n                        colors={defaultColors}\r\n                        label={borderLabel}\r\n                        onChange={(newBorder) => {\r\n                            setAttributes({ [attrBorderKey]: newBorder });\r\n                        }}\r\n                        value={attributes[attrBorderKey]}\r\n                    />\r\n                </ToolsPanelItem>\r\n            )}\r\n\r\n            {showBorderRadius && (\r\n                <ToolsPanelItem\r\n                    panelId={clientId}\r\n                    isShownByDefault={showDefaultBorderRadius}\r\n                    resetAllFilter={() =>\r\n                        setAttributes({\r\n                            [attrBorderRadiusKey]: {},\r\n                        })\r\n                    }\r\n                    label={borderRadiusLabel}\r\n                    hasValue={() => !isEmpty(attributes[attrBorderRadiusKey])}\r\n                    onDeselect={() => {\r\n                        setAttributes({ [attrBorderRadiusKey]: {} });\r\n                    }}\r\n                >\r\n                    <BaseControl.VisualLabel as=\"legend\">\r\n                        {borderRadiusLabel}\r\n                    </BaseControl.VisualLabel>\r\n                    <div className=\"tableberg-custom-border-radius-control\">\r\n                        <BorderRadiusControl\r\n                            values={attributes[attrBorderRadiusKey]}\r\n                            onChange={(newBorderRadius: any) => {\r\n                                const splitted =\r\n                                    splitBorderRadius(newBorderRadius);\r\n\r\n                                setAttributes({\r\n                                    [attrBorderRadiusKey]: splitted,\r\n                                });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </ToolsPanelItem>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BorderControl;\r\n","/**\r\n * WordPress Dependencies\r\n */\r\n\r\nimport { useDispatch, useSelect } from \"@wordpress/data\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport {\r\n    // @ts-ignore\r\n    useBlockEditContext,\r\n    // @ts-ignore\r\n    __experimentalColorGradientSettingsDropdown as ColorGradientSettingsDropdown,\r\n    // @ts-ignore\r\n    __experimentalUseMultipleOriginColorsAndGradients as useMultipleOriginColorsAndGradients,\r\n} from \"@wordpress/block-editor\";\r\nimport { ColorSettingsWithGradientPropTypes } from \"../types\";\r\n\r\n/**\r\n *\r\n * @param {object} props - Color settings with gradients props\r\n * @param {string} props.label - Component Label\r\n * @param {string} props.attrBackgroundKey - Attribute key for background color\r\n * @param {string} props.attrGradientKey - Attribute key for gradient background color\r\n *\r\n */\r\nfunction ColorSettingWithGradient({\r\n    attrBackgroundKey,\r\n    attrGradientKey,\r\n    label,\r\n}: ColorSettingsWithGradientPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n\r\n    // @ts-ignore\r\n    const attributes = useSelect((select) => {\r\n        // @ts-ignore\r\n        return select(\"core/block-editor\").getBlockAttributes(clientId);\r\n    });\r\n    // @ts-ignore\r\n    const setAttributes = (newAttributes) =>\r\n        updateBlockAttributes(clientId, newAttributes);\r\n    const colorGradientSettings = useMultipleOriginColorsAndGradients();\r\n    // @ts-ignore\r\n    const { defaultColors, defaultGradients } = useSelect((select) => {\r\n        return {\r\n            defaultColors:\r\n                // @ts-ignore\r\n                select(\"core/block-editor\")?.getSettings()\r\n                    ?.__experimentalFeatures?.color?.palette?.default,\r\n\r\n            defaultGradients:\r\n                // @ts-ignore\r\n                select(\"core/block-editor\")?.getSettings()\r\n                    ?.__experimentalFeatures?.color?.gradients?.default,\r\n        };\r\n    });\r\n\r\n    return (\r\n        <ColorGradientSettingsDropdown\r\n            {...colorGradientSettings}\r\n            enableAlpha\r\n            panelId={clientId}\r\n            title={__(\"Color Settings\", \"gutenberghub-tabs\")}\r\n            popoverProps={{\r\n                placement: \"left start\",\r\n            }}\r\n            settings={[\r\n                {\r\n                    clearable: true,\r\n                    resetAllFilter: () =>\r\n                        setAttributes({\r\n                            [attrBackgroundKey]: null,\r\n                            [attrGradientKey]: null,\r\n                        }),\r\n                    colorValue: attributes[attrBackgroundKey],\r\n                    gradientValue: attributes[attrGradientKey],\r\n                    colors: defaultColors,\r\n                    gradients: defaultGradients,\r\n                    label: label,\r\n                    onColorChange: (newValue: string | null) =>\r\n                        setAttributes({\r\n                            [attrBackgroundKey]: newValue,\r\n                        }),\r\n                    onGradientChange: (newValue: string | null) =>\r\n                        setAttributes({\r\n                            [attrGradientKey]: newValue,\r\n                        }),\r\n                },\r\n            ]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ColorSettingWithGradient;\r\n","/**\r\n * WordPress Dependencies\r\n */\r\n\r\nimport { useDispatch, useSelect } from \"@wordpress/data\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport {\r\n    // @ts-ignore\r\n    useBlockEditContext,\r\n    // @ts-ignore\r\n    __experimentalColorGradientSettingsDropdown as ColorGradientSettingsDropdown,\r\n    // @ts-ignore\r\n    __experimentalUseMultipleOriginColorsAndGradients as useMultipleOriginColorsAndGradients,\r\n} from \"@wordpress/block-editor\";\r\nimport { ColorSettingsPropTypes } from \"../types\";\r\n\r\n/**\r\n *\r\n * @param {object} props - Color settings props\r\n * @param {string} props.label - Component Label\r\n * @param {string} props.attrKey - Attribute key for color\r\n *\r\n */\r\nfunction ColorSetting({ attrKey, label }: ColorSettingsPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n\r\n    // @ts-ignore\r\n    const attributes = useSelect((select) => {\r\n        // @ts-ignore\r\n        return select(\"core/block-editor\").getBlockAttributes(clientId);\r\n    });\r\n\r\n    const setAttributes = (newAttributes: object) =>\r\n        updateBlockAttributes(clientId, newAttributes);\r\n    const colorGradientSettings = useMultipleOriginColorsAndGradients();\r\n    // @ts-ignore\r\n    const { defaultColors } = useSelect((select) => {\r\n        return {\r\n            defaultColors:\r\n                // @ts-ignore\r\n                select(\"core/block-editor\")?.getSettings()\r\n                    ?.__experimentalFeatures?.color?.palette?.default,\r\n        };\r\n    });\r\n\r\n    return (\r\n        <ColorGradientSettingsDropdown\r\n            {...colorGradientSettings}\r\n            enableAlpha\r\n            panelId={clientId}\r\n            title={__(\"Color Settings\", \"gutenberghub-tabs\")}\r\n            popoverProps={{\r\n                placement: \"left start\",\r\n            }}\r\n            settings={[\r\n                {\r\n                    clearable: true,\r\n                    resetAllFilter: () =>\r\n                        setAttributes({\r\n                            [attrKey]: null,\r\n                        }),\r\n                    colorValue: attributes[attrKey],\r\n                    colors: defaultColors,\r\n                    label: label,\r\n                    onColorChange: (newValue: string | null) =>\r\n                        setAttributes({ [attrKey]: newValue }),\r\n                },\r\n            ]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ColorSetting;\r\n","export { default as BorderControl } from \"./border-control\";\r\nexport { default as CustomToggleGroupControl } from \"./toggle-group-control\";\r\nexport { default as SpacingControl } from \"./spacing-control\";\r\nexport { default as ColorSettings } from \"./color-settings/color-settings\";\r\nexport { default as ColorSettingsWithGradient } from \"./color-settings/color-settings-with-gradient\";\r\n","/**\r\n * WordPress Dependencies\r\n */\r\n//@ts-ignore\r\nimport { isEmpty } from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport {\r\n    //@ts-ignore\r\n    useBlockEditContext,\r\n    //@ts-ignore\r\n    __experimentalSpacingSizesControl as SpacingSizesControl,\r\n} from \"@wordpress/block-editor\";\r\nimport { useSelect, useDispatch } from \"@wordpress/data\";\r\nimport { __experimentalToolsPanelItem as ToolsPanelItem } from \"@wordpress/components\";\r\nimport { SpacingPropTypes } from \"../types\";\r\n\r\nfunction SpacingControl({\r\n    label,\r\n    attrKey,\r\n    showByDefault = false,\r\n}: SpacingPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n\r\n    //@ts-ignore\r\n    const attributes = useSelect(\r\n        (select) =>\r\n            //@ts-ignore\r\n            select(\"core/block-editor\").getSelectedBlock().attributes\r\n    );\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n\r\n    const setAttributes = (newAttributes: object) => {\r\n        updateBlockAttributes(clientId, newAttributes);\r\n    };\r\n    return (\r\n        <>\r\n            <ToolsPanelItem\r\n                panelId={clientId}\r\n                isShownByDefault={showByDefault}\r\n                resetAllFilter={() => {\r\n                    setAttributes({\r\n                        [attrKey]: {},\r\n                    });\r\n                }}\r\n                className={\"tools-panel-item-spacing\"}\r\n                label={label}\r\n                onDeselect={() => setAttributes({ [attrKey]: {} })}\r\n                hasValue={() => !isEmpty(attributes[attrKey])}\r\n            >\r\n                <SpacingSizesControl\r\n                    allowReset={true}\r\n                    label={label}\r\n                    values={attributes[attrKey]}\r\n                    sides={[\"top\", \"right\", \"bottom\", \"left\"]}\r\n                    onChange={(newValue: any) => {\r\n                        setAttributes({\r\n                            [attrKey]: newValue,\r\n                        });\r\n                    }}\r\n                />\r\n            </ToolsPanelItem>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpacingControl;\r\n","/**\r\n * WordPress Dependencies\r\n */\r\nimport { useDispatch, useSelect } from \"@wordpress/data\";\r\n//@ts-ignore\r\nimport { useBlockEditContext } from \"@wordpress/block-editor\";\r\nimport {\r\n    __experimentalToggleGroupControl as ToggleGroupControl,\r\n    __experimentalToggleGroupControlOptionIcon as ToggleGroupControlOptionIcon,\r\n    __experimentalToggleGroupControlOption as ToggleGroupControlOption,\r\n} from \"@wordpress/components\";\r\nimport { ToggleGroupControlPropTypes } from \"../types\";\r\n\r\nfunction CustomToggleGroupControl({\r\n    label,\r\n    options,\r\n    attributeKey,\r\n    isBlock = false,\r\n    isAdaptiveWidth = false,\r\n    isDeselectable = false,\r\n}: ToggleGroupControlPropTypes) {\r\n    const { clientId } = useBlockEditContext();\r\n    const { updateBlockAttributes } = useDispatch(\"core/block-editor\");\r\n\r\n    //@ts-ignore\r\n    const attributes = useSelect((select) => {\r\n        //@ts-ignore\r\n        return select(\"core/block-editor\").getBlockAttributes(clientId);\r\n    });\r\n    const setAttributes = (newAttributes: object) =>\r\n        updateBlockAttributes(clientId, newAttributes);\r\n\r\n    return (\r\n        <ToggleGroupControl\r\n            label={label}\r\n            isBlock={isBlock}\r\n            isDeselectable={isDeselectable}\r\n            isAdaptiveWidth={isAdaptiveWidth}\r\n            __nextHasNoMarginBottom\r\n            value={attributes[attributeKey]}\r\n            onChange={(newValue) => {\r\n                setAttributes({\r\n                    [attributeKey]: newValue,\r\n                });\r\n            }}\r\n        >\r\n            {options.map(({ value, icon = null, label }) => {\r\n                return icon ? (\r\n                    <ToggleGroupControlOptionIcon\r\n                        key={value}\r\n                        value={value}\r\n                        icon={icon}\r\n                        label={label}\r\n                    />\r\n                ) : (\r\n                    <ToggleGroupControlOption\r\n                        key={value}\r\n                        value={value}\r\n                        label={label}\r\n                    />\r\n                );\r\n            })}\r\n        </ToggleGroupControl>\r\n    );\r\n}\r\n\r\nexport default CustomToggleGroupControl;\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"button/index\": 0,\n\t\"button/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunktableberg\"] = globalThis[\"webpackChunktableberg\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"button/style-index\"], () => (__webpack_require__(\"./src/button/index.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["isUndefined","trim","isEmpty","getStyleClass","attributes","backgroundHoverColor","textHoverColor","backgroundHoverGradient","backgroundColor","textColor","backgroundGradient","isValueEmpty","value","omitBy","getStyles","styles","classnames","registerBlockType","prependHTTP","useMergeRefs","Button","ButtonGroup","PanelBody","Popover","TextControl","ToolbarButton","CheckboxControl","metadata","AlignmentControl","RichText","useBlockProps","InspectorControls","__experimentalUseBorderProps","useBorderProps","__experimentalLinkControl","LinkControl","BlockControls","BlockAlignmentToolbar","useEffect","useMemo","useRef","useState","link","linkOff","ColorSettings","ColorSettingsWithGradient","__","ALL_REL","NEW_TAB_REL","edit","setAttributes","isSelected","WidthPanel","selectedWidth","handleChange","newWidth","width","undefined","createElement","title","map","widthValue","key","isSmall","variant","onClick","text","align","textAlign","id","url","rel","linkTarget","ref","richTextRef","isURLSet","opensInNewTab","borderProps","isEditingURL","setIsEditingURL","popoverAnchor","setPopoverAnchor","blockProps","className","style","blockAlignChange","newValue","onToggleOpenInNewTab","newLinkTarget","handleRelChange","startEditing","event","preventDefault","unlink","linkValue","relOpt","state","includes","replace","Fragment","fontSize","placeholder","allowedFormats","onChange","withoutInteractiveFormatting","identifier","group","controls","nextAlign","icon","isActive","placement","onClose","current","focus","anchor","focusOnMount","__unstableSlotName","shift","newURL","newOpensInNewTab","onRemove","forceIsEditingLink","attrKey","label","attrBackgroundKey","attrGradientKey","val","checked","name","category","type","example","useBlockEditContext","__experimentalBorderRadiusControl","BorderRadiusControl","useSelect","useDispatch","BaseControl","__experimentalToolsPanelItem","ToolsPanelItem","__experimentalBorderBoxControl","BorderBoxControl","splitBorderRadius","isValueMixed","splittedBorderRadius","topLeft","topRight","bottomLeft","bottomRight","BorderControl","borderLabel","attrBorderKey","borderRadiusLabel","attrBorderRadiusKey","showBorder","showBorderRadius","showDefaultBorder","showDefaultBorderRadius","clientId","select","getSelectedBlock","updateBlockAttributes","newAttributes","defaultColors","getSettings","__experimentalFeatures","color","palette","default","panelId","isShownByDefault","resetAllFilter","hasValue","onDeselect","enableAlpha","size","colors","newBorder","VisualLabel","as","values","newBorderRadius","splitted","__experimentalColorGradientSettingsDropdown","ColorGradientSettingsDropdown","__experimentalUseMultipleOriginColorsAndGradients","useMultipleOriginColorsAndGradients","ColorSettingWithGradient","getBlockAttributes","colorGradientSettings","defaultGradients","gradients","popoverProps","settings","clearable","colorValue","gradientValue","onColorChange","onGradientChange","ColorSetting","CustomToggleGroupControl","SpacingControl","__experimentalSpacingSizesControl","SpacingSizesControl","showByDefault","allowReset","sides","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOptionIcon","ToggleGroupControlOptionIcon","__experimentalToggleGroupControlOption","ToggleGroupControlOption","options","attributeKey","isBlock","isAdaptiveWidth","isDeselectable","__nextHasNoMarginBottom"],"sourceRoot":""}