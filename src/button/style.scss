// This variable is repeated across Button, Buttons, and Buttons editor styles.
$blocks-block__margin: 0.5em;

// Prefer the link selector instead of the regular button classname
// to support the previous markup in addition to the new one.
.wp-block-tableberg-button__link {
    cursor: pointer;
    display: inline-block;
    text-align: center;
    word-break: break-word; // overflow-wrap doesn't work well if a link is wrapped in the div, so use word-break here.
    box-sizing: border-box;

    &.aligncenter {
        text-align: center;
    }

    &.alignright {
        /*rtl:ignore*/
        text-align: right;
    }
}

// These rules are set to zero specificity to keep the default styles for buttons.
// They are needed for backwards compatibility.
:where(.wp-block-tableberg-button__link) {
    // This needs a low specificity so it won't override the rules from the button element if defined in theme.json.
    box-shadow: none;
    text-decoration: none;

    // 100% causes an oval, but any explicit but really high value retains the pill shape.
    border-radius: 9999px;

    // The extra 2px are added to size solids the same as the outline versions.
    padding: calc(0.667em + 2px) calc(1.333em + 2px);
}

.wp-block-tableberg-button[style*="text-decoration"]
    .wp-block-tableberg-button__link {
    text-decoration: inherit;
}

// Increased specificity needed to override margins.
.wp-block-tableberg-button {
    &.has-custom-width {
        max-width: none;
        .wp-block-tableberg-button__link {
            width: 100%;
        }
    }

    &.has-custom-font-size {
        .wp-block-tableberg-button__link {
            font-size: inherit;
        }
    }

    &.wp-block-tableberg-button__width-25 {
        width: calc(
            25% - (var(--wp--style--block-gap, #{$blocks-block__margin}) * 0.75)
        );
    }

    &.wp-block-tableberg-button__width-50 {
        width: calc(
            50% - (var(--wp--style--block-gap, #{$blocks-block__margin}) * 0.5)
        );
    }

    &.wp-block-tableberg-button__width-75 {
        width: calc(
            75% - (var(--wp--style--block-gap, #{$blocks-block__margin}) * 0.25)
        );
    }

    &.wp-block-tableberg-button__width-100 {
        width: 100%;
        flex-basis: 100%;
    }
}

// For vertical buttons, gap is not factored into width calculations.
.wp-block-tableberg-buttons.is-vertical > .wp-block-tableberg-button {
    &.wp-block-tableberg-button__width-25 {
        width: 25%;
    }

    &.wp-block-tableberg-button__width-50 {
        width: 50%;
    }

    &.wp-block-tableberg-button__width-75 {
        width: 75%;
    }
}

// the first selector is required for old buttons markup
.wp-block-tableberg-button.is-style-squared,
.wp-block-tableberg-button__link.wp-block-tableberg-button.is-style-squared {
    border-radius: 0;
}

// the first selector is required for old buttons markup
.wp-block-tableberg-button.no-border-radius,
.wp-block-tableberg-button__link.no-border-radius {
    border-radius: 0 !important;
}

.wp-block-tableberg-button.is-style-outline > .wp-block-tableberg-button__link,
.wp-block-tableberg-button .wp-block-tableberg-button__link.is-style-outline {
    border: 2px solid currentColor;
    padding: 0.667em 1.333em;
}

.wp-block-tableberg-button.is-style-outline
    > .wp-block-tableberg-button__link:not(.has-text-color),
.wp-block-tableberg-button
    .wp-block-tableberg-button__link.is-style-outline:not(.has-text-color) {
    color: currentColor;
}

.wp-block-tableberg-button.is-style-outline
    > .wp-block-tableberg-button__link:not(.has-background),
.wp-block-tableberg-button
    .wp-block-tableberg-button__link.is-style-outline:not(.has-background) {
    background-color: transparent;
    // background-image is required to overwrite a gradient background
    background-image: none;
}

.wp-block-tableberg-button .wp-block-tableberg-button__link {
    // The following styles ensure a default border is applied when the user
    // selects only a border color or style. This overcomes the zero border
    // width applied by core's theme.json via the elements API.
    &:where(.has-border-color) {
        border-width: initial;
    }
    &:where([style*="border-top-color"]) {
        border-top-width: initial;
    }
    &:where([style*="border-right-color"]) {
        border-right-width: initial;
    }
    &:where([style*="border-bottom-color"]) {
        border-bottom-width: initial;
    }
    &:where([style*="border-left-color"]) {
        border-left-width: initial;
    }

    &:where([style*="border-style"]) {
        border-width: initial;
    }
    &:where([style*="border-top-style"]) {
        border-top-width: initial;
    }
    &:where([style*="border-right-style"]) {
        border-right-width: initial;
    }
    &:where([style*="border-bottom-style"]) {
        border-bottom-width: initial;
    }
    &:where([style*="border-left-style"]) {
        border-left-width: initial;
    }
}
